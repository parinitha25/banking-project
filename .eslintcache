[{"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js":"1","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\navbar.js":"2","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createIPaddress.js":"3","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js":"4","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js":"5","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js":"6","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createBranch.js":"7","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js":"8","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js":"9","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js":"10","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js":"11","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Taluk.js":"12","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\config\\browserHistory.js":"13","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js":"14","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js":"15","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js":"16","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\taluk.js":"17","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js":"18","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js":"19","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Bod.js":"20","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js":"21","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js":"22","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Planparameter.js":"23","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js":"24","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js":"25","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Loanondeposit.js":"26","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js":"27","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\deposit.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":1563,"mtime":1609908607275,"results":"31","hashOfConfig":"30"},{"size":11020,"mtime":1608530798866,"results":"32","hashOfConfig":"30"},{"size":2837,"mtime":1610111847290,"results":"33","hashOfConfig":"30"},{"size":152,"mtime":1610115884082,"results":"34","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"30"},{"size":20177,"mtime":1608553124473,"results":"36","hashOfConfig":"30"},{"size":13041,"mtime":1609940592528,"results":"37","hashOfConfig":"30"},{"size":13836,"mtime":1610009099371,"results":"38","hashOfConfig":"30"},{"size":15135,"mtime":1610099596702,"results":"39","hashOfConfig":"30"},{"size":12319,"mtime":1610009005388,"results":"40","hashOfConfig":"30"},{"size":15525,"mtime":1609917252793,"results":"41","hashOfConfig":"30"},{"size":109,"mtime":1608871741914,"results":"42","hashOfConfig":"30"},{"size":10823,"mtime":1610113073591,"results":"43","hashOfConfig":"30"},{"size":15302,"mtime":1610090912775,"results":"44","hashOfConfig":"30"},{"size":21119,"mtime":1610095621663,"results":"45","hashOfConfig":"30"},{"size":14985,"mtime":1610009013555,"results":"46","hashOfConfig":"30"},{"size":14680,"mtime":1610107543588,"results":"47","hashOfConfig":"30"},{"size":27717,"mtime":1610098781078,"results":"48","hashOfConfig":"30"},{"size":12079,"mtime":1610165461461,"results":"49","hashOfConfig":"30"},{"size":11375,"mtime":1610081126457,"results":"50","hashOfConfig":"30"},{"size":18280,"mtime":1610082983750,"results":"51","hashOfConfig":"30"},{"size":14006,"mtime":1610004486350,"results":"52","hashOfConfig":"30"},{"size":11343,"mtime":1610108795236,"results":"53","hashOfConfig":"30"},{"size":8918,"mtime":1610109694061,"results":"54","hashOfConfig":"30"},{"size":11932,"mtime":1610111727125,"results":"55","hashOfConfig":"30"},{"size":13715,"mtime":1610109802324,"results":"56","hashOfConfig":"30"},{"size":15101,"mtime":1610115025117,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"7qkwa2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"69"},"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js",[],["130","131"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\navbar.js",[],["132","133"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createIPaddress.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js",["134","135"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from './Components/Master/Navbar';\nimport CreateIPaddress from '../src/Components/Master/createIPaddress';\n// import CreateNews from '../src/Components/Master/createNews';\nimport Relationship from '../src/Components/Master/Relationship';\nimport CreateBranch from '../src/Components/Master/createBranch';\nimport state from '../src/Components/Master/state';\nimport District from './Components/Master/District';\nimport News from './Components/Master/News';\nimport Taluk from './Components/Master/taluk';\nimport Country from './Components/Master/Country';\nimport Village from './Components/Master/Village';\nimport Share from './Components/Master/share';\nimport Financialyear from './Components/Master/Financialyear';\nimport Branch from './Components/Master/Branch';\nimport Bod from './Components/Master/Bod';\nimport Eod from './Components/Master/Eod';\nimport Holidaylist from './Components/Master/HolidayList';\nimport Planparameter from './Components/Master/Planparameter';\nimport IPaddress from './Components/Master/IPaddress';\nimport Deposit from './Components/Master/deposit';\nimport Latefeeparameter from './Components/Master/LateFeeparameter';\n\nimport './App.css';\n\nclass App extends Component {\n  render(){\n  return (\n    <div> \n       <Navbar />\n        <Router >\n          <Switch>\n            <Route exact path='/ipaddress' component={IPaddress}></Route>\n            <Route exact path='/relationship' component={Relationship}></Route> \n            {/* <Route exact path='/branch' component={CreateBranch}></Route>    */}\n            <Route exact path='/state' component={state}></Route>      \n            <Route exact path='/district' component={District}></Route>   \n            <Route exact path='/news' component={News}></Route>   \n            <Route exact path='/taluk' component={Taluk}></Route>  \n            <Route exact path='/village' component={Village}></Route>  \n            <Route exact path='/country' component={Country}></Route>  \n            <Route exact path='/share' component={Share}></Route>  \n            <Route exact path='/financialyear' component={Financialyear}></Route>  \n            <Route exact path='/branch' component={Branch}></Route>  \n            <Route exact path='/bod' component={Bod}></Route>  \n            <Route exact path='/eod' component={Eod}></Route>  \n            <Route exact path='/holidaylist' component={Holidaylist}></Route>  \n            <Route exact path='/planparameter' component={Planparameter}></Route>\n            <Route exact path='/loanondeposit' component={Deposit}></Route>\n            <Route exact path='/latefee' component={Latefeeparameter}></Route>\n          </Switch>\n          </Router>\n\n    </div>\n     );\n  }\n}\n\nexport default App;\n",["136","137"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js",[],["138","139"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createBranch.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js",["140"],"import React, { Component } from 'react';\r\nimport '../../css/Master/state.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass State extends Component{\r\n    state={\r\n        state:'',\r\n        country:'' ,\r\n        state_data:[],\r\n        country_data:[],\r\n        delete_posts:[],   \r\n        button:\"ADD\",\r\n        id:'',\r\n        editing:false,\r\n        stateError:'',\r\n        countryError:'',\r\n        errors:{},\r\n        isediting:true\r\n    }\r\n\r\n    validate=()=>{\r\n        debugger\r\n        const errors={};\r\n        if(this.state.state.trim() === ''){\r\n            errors.stateError='State name is required.';\r\n        }\r\n        else if(!this.state.state.match(/^[a-zA-Z ]+$/)){\r\n            errors.stateError = \"State name is not correct\";\r\n        }\r\n        if(this.state.country=== '')\r\n            errors.countryError='Country is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n   \r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the country value\r\n    handleChangecountry=(e)=>{\r\n        debugger\r\n        this.setState({country:e.target.value})\r\n    }\r\n \r\n    handleSubmit=()=>{\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n                const params = {\r\n                    state:this.state.state,\r\n                    countrySlno:this.state.country\r\n                }   \r\n                api.post(`master/state/create`, params)      \r\n                .then(res =>{     \r\n                    this.setState({editing:false})\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                    this.getstateList();   \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            state:this.state.state,\r\n            countrySlno:this.state.country,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/state/update`, params)\r\n        .then(res => {      \r\n            console.log(res);\r\n            message.success(res.data.data);\r\n            setTimeout(function(){window.location.reload(); }, 1000);\t\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            message.error(err.response.data.message);\r\n            setTimeout(function(){window.location.reload(); }, 1000);     \r\n        })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getstateList();\r\n        this.getcountrylist();\r\n    }\r\n    \r\n    //get state data\r\n    getstateList = () => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n            console.log(this.state.state_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get country list\r\n    getcountrylist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n          this.setState({country_data:res.data.data})\r\n            console.log(this.state.country_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n     //edit data\r\n     getstatebyslno= (slno) => {\r\n         debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        console.log(config)\r\n        api(config).then(res=>{\r\n        this.setState({country:res.data.data[0].countrySlno,state:res.data.data[0].state,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        console.log(this.state.country)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/state/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(    \r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div  className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>State</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>State</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">State</label></div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\t\t\r\n                                      \t\t<div class=\"form-group col-md-12 col-sm-12\">\r\n                                            <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"city\">Country<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <select class=\"form-control\" name=\"country\"  value={this.state.country}  onChange={this.handleChangecountry}>\r\n                                                            <option>--Select Country--</option>\r\n                                                            {this.state.country_data.map((data) => \r\n                                                                <option value={data.slno}>{data.country}</option>             \r\n                                                            )}\r\n                                                        </select>\r\n                     \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.countryError}</div>}\r\n                                                      \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"city\">State<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\" id=\"myInput\"  placeholder=\"Enter State\" type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}    \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                    </div>\r\n                                                   </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>       \r\n                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                    <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                        <thead>\r\n                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                <th style={{textAlign:\"center\"}}>Country</th>\r\n                                                <th style={{textAlign:\"center\"}}>State</th>\r\n                                                <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                <th style={{textAlign:\"center\"}}>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            { this.state.state_data.map((data, index) => \r\n                                                <tr role=\"row\" className=\"odd\">\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.country}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.state}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                        <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td  style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getstatebyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}  \r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>              \r\n        )\r\n    }\r\n}\r\n\r\nexport default State;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js",["141"],"import React, { Component } from 'react';\r\nimport '../../css/Master/district.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass District extends Component{\r\n    state={\r\n        district:'',\r\n        state_data:[],\r\n        district_data:[],\r\n        delete_posts:[],\r\n        button:'ADD',\r\n        editing:false,\r\n        state:'',\r\n        id:'' ,\r\n        nameError:'',\r\n        countryError:'',\r\n        stateError:'',\r\n        errors:{},  \r\n        isediting:true\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})  \r\n    }\r\n\r\n    validate=()=>{\r\n        debugger\r\n        const errors={};\r\n        if(this.state.district.trim() === ''){\r\n            errors.nameError='District name is required.';\r\n        }\r\n        else if(!this.state.district.match(/^[a-zA-Z]+$/)){\r\n            errors.nameError = \"District name is not correct\";\r\n        }\r\n        if(this.state.state === '')\r\n        errors.stateError='State is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //change state value\r\n    handleChangestate=(e)=>{\r\n        this.setState({state:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n     handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n    // create data\r\n    handleSubmit=()=>{\r\n        const errors=this.validate();\r\n        console.log(errors);\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){ \r\n            const params = {\r\n                district:this.state.district,\r\n                stateSlno:this.state.state\r\n            }      \r\n            api.post(`master/district/create`, params)\r\n            .then(res => {\r\n                this.setState({editing:false})\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); },1000);\r\n                this.getdistrictList();\t\r\n               \r\n            })\r\n            .catch(res=>{\r\n                console.log(res);\r\n                message.error('District name already exists');\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n            })\r\n        }\r\n        else{\r\n            debugger\r\n            const params = {\r\n                slno:this.state.id,\r\n                district:this.state.district,\r\n                stateSlno:this.state.state,\r\n                isActive:this.state.isediting\r\n            }     \r\n            api.post(`master/district/update`, params)\r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); },1000);\r\n                this.getdistrictList();\t\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error('District name already exists');\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n            })\r\n        }\r\n           \r\n    }\r\n  \r\n    componentDidMount(){\r\n        this.getdistrictList();\r\n        this.getstatelist();\r\n    }\r\n\r\n    //get district data\r\n    getdistrictList = () => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    deletedata=(slno)=> {\r\n        debugger\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/district/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error('District  not present');\r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    //edit data\r\n    getdistrictbyslno= (slno) => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n        this.setState({state:res.data.data[0].stateSlno,district:res.data.data[0].district,id:res.data.data[0].slno,editing:true,button:\"Update\"}) \r\n        console.log(this.state.state) \r\n        console.log(this.state.id)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    //get state data   \r\n    getstatelist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n            console.log(this.state.state_data)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div  className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>District</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>District</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">District</label></div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\t\t\t\t\t\t\t\t\t\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                            <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\">\t\t\r\n                                                        <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                        <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                            <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                                <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                        <label class=\"control-label\" for=\"city\">State<span style={{color:\"red\"}}>*</span></label>\r\n                                                                    <select class=\"form-control\" name=\"state\" value={this.state.state} onChange={this.handleChangestate}>\r\n                                                                        <option>Select State</option>\r\n                                                                            {this.state.state_data.map((data) => \r\n                                                                                <option value={data.slno}>{data.state}</option>\r\n                                                                            )}\r\n                                                                    </select>\r\n                                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}\r\n                                                                </div>\r\n                                                                <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                    <label class=\"control-label\" for=\"city\">District<span style={{color:\"red\"}}>*</span></label>\r\n                                                                    <input  id=\"myInput\" class=\"form-control\"  placeholder=\"Enter District\" type=\"text\" name=\"district\" value={this.state.district} onChange={this.handleChange}/> \r\n                                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.nameError}</div>}         \r\n                                                                </div>\r\n                                                                <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                    <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>       \r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>State</th>\r\n                                                    <th style={{textAlign:\"center\"}}>District</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.district_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.state}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.district}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>  \r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActicve}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label>\r\n                                                        </td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getdistrictbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default District;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Taluk.js",["142"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\config\\browserHistory.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js",["143"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js",["144"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass village extends Component{\r\n    state={\r\n        taluk_data:[],\r\n        district_data:[],\r\n        village_data:[],\r\n        village:'',\r\n        districtError:'',\r\n        talukError:'',\r\n        villageError:'',\r\n        taluk:'',\r\n        district:'',\r\n        isediting:true,\r\n        editing:false,\r\n        button:'ADD',\r\n        id:''\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the district value\r\n    handleChangedistrict=(e)=>{\r\n        debugger\r\n        this.setState({district:e.target.value})\r\n    }\r\n\r\n    // change the taluk value\r\n    handleChangetaluk=(e)=>{\r\n        debugger\r\n        this.setState({taluk:e.target.value})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getdistrictList();  \r\n        this.gettalukList();  \r\n        this.getvillageList();\r\n        \r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.village.trim() === ''){\r\n            errors.villageError='Village name is required.';\r\n        }\r\n        else if(!this.state.village.match(/^[a-zA-Z]+$/)){\r\n            errors.villageError = \"Village name is not correct\";\r\n        }\r\n        if(this.state.taluk=== '')\r\n            errors.talukError='Taluk is required.';\r\n\r\n        if(this.state.district=== '')\r\n            errors.districtError='District is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n    // create data\r\n     handleSubmit=()=>{ \r\n         debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                village:this.state.village,\r\n                districtSlno:this.state.district,\r\n                talukSlno:this.state.taluk,\r\n            }   \r\n            api.post(`master/village/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                village:this.state.village,\r\n                districtSlno:this.state.district,\r\n                talukSlno:this.state.taluk,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/village/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n\r\n    //get taluk list\r\n    gettalukList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({taluk_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n    //get village list\r\n    getvillageList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/village/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({village_data:res.data.data})\r\n            console.log(this.state.village_data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get district list\r\n    getdistrictList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/village/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n    getvillagebyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/village/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({district:res.data.data[0].districtSlno,taluk:res.data.data[0].talukSlno,village:res.data.data[0].village,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10\">\r\n                            <h4>Village</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Village</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">Village</label></div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"district\" style={{fontSize: \"16px\"}}>District</label> <span style={{color: \"red\"}}>*</span>\r\n                                                            <select class=\"form-control\" name=\"district\"  value={this.state.district}  onChange={this.handleChangedistrict}>\r\n                                                                <option>--Select District--</option>\r\n                                                                {this.state.district_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.district}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.districtError}</div>}\t\r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"taluk\" style={{fontSize: \"16px\"}}>Taluk</label> <span style={{color: \"red\"}}>*</span>\r\n                                                            <select class=\"form-control\" name=\"taluk\"  value={this.state.taluk}  onChange={this.handleChangetaluk}>\r\n                                                                <option>--Select District--</option>\r\n                                                                {this.state.taluk_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.taluk}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.talukError}</div>}\t\r\n                     \r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"village\" style={{fontSize: \"16px\"}}>Village</label> <span style={{color: \"red\"}}>*</span>\t\r\n                                                            <input class=\"form-control\"  name=\"village\" placeholder=\"Enter Village\" type=\"text\"  value={this.state.village} onChange={this.handleChange}/>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.villageError}</div>}\t\r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>District</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Taluk</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Village</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.village_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.district}</td> \r\n                                                        <td style={{textAlign:\"left\"}}>{data.taluk}</td>\r\n                                                        <td style={{textAlign:\"left\"}}>{data.village}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>  \r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label>\r\n                                                        </td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getvillagebyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )} \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default village;",["145","146"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js",["147","148","149","150"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport {Form ,Input} from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Share extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        member_data:[],\r\n        share_data:[],\r\n        membertype:'',\r\n        persharevalue:'',\r\n        min_share:'',\r\n        max_share:'',\r\n        dividend_declared:'',\r\n        editing:false,\r\n        isediting:true,\r\n        button:\"ADD\",\r\n        membertypeError:'',\r\n        shareError:'',\r\n        MinshareError:'',\r\n        MaxshareError:'',\r\n        DividendError:'',\r\n        id:''\r\n    }\r\n\r\n    validate=()=>{\r\n        debugger\r\n        const errors={};\r\n        if(this.state.membertype === ''){\r\n            errors.membertypeError='Member  type is required.';\r\n        }\r\n        if(this.state.persharevalue === ''){\r\n            errors.shareError='Per share value  is required.';\r\n        }\r\n        // else if(!this.state.persharevalue.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.shareError = \"Per share value is not correct\";\r\n        // }\r\n        if(this.state.min_share === ''){\r\n            errors.MinshareError='Minimum share is required.';\r\n        }\r\n        // else if(!this.state.min_share.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.MinshareError = \"Minimum share is not correct\";\r\n        // }\r\n      \r\n        if(this.state.max_share === ''){\r\n            errors.MaxshareError='Maximum share is required.';\r\n        }\r\n        // else if(!this.state.max_share.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.MaxshareError = \"Maximum share is not correct\";\r\n        // }\r\n        if(this.state.dividend_declared === ''){\r\n            errors.DividendError='Dividend declared is required.';\r\n        }\r\n        // else if(!this.state.dividend_declared.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.DividendError = \"Dividend declared is not correct\";\r\n        // }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n   \r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        this.getMembertypeList();\r\n        this.getShareList();\r\n    }\r\n\r\n    // change the member type value\r\n    handleChangemembertype=(e)=>{\r\n        debugger\r\n        this.setState({membertype:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n     handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit=async()=>{\r\n        // const errors=this.validate();\r\n        // this.setState({errors})\r\n        // if(errors) return;\r\n       \r\n        if(this.state.editing===false){ \r\n            try{ \r\n                const value = await this.formRef.current.validateFields();\r\n                const params = {\r\n                    memberTypeSlno:this.state.membertype,\r\n                    shareValue:this.state.persharevalue,\r\n                    minShare:this.state.min_share,\r\n                    maxShare:this.state.max_share,\r\n                    dividendDeclared:this.state.dividend_declared\r\n                }   \r\n                api.post(`master/shareParameter/create`, params)      \r\n                .then(res =>{     \r\n                    this.setState({editing:false})\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                    // this.getMembertypeList();   \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                })\r\n            }catch (errorInfo) {\r\n            console.log(\"failure\", errorInfo);\r\n          }\r\n    \r\n}\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            memberTypeSlno:this.state.membertype,\r\n            shareValue:this.state.persharevalue,\r\n            minShare:this.state.min_share,\r\n            maxShare:this.state.max_share,\r\n            dividendDeclared:this.state.dividend_declared,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/shareParameter/update`, params)\r\n        .then(res => {      \r\n            console.log(res);\r\n            message.success(res.data.data);\r\n            setTimeout(function(){window.location.reload(); }, 1000);\t\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            message.error(err.response.data.message);\r\n            setTimeout(function(){window.location.reload(); }, 1000);     \r\n        })\r\n        }\r\n    }\r\n    //get member  data\r\n    getMembertypeList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/memberType/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({member_data:res.data.data})\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n     \r\n    //get share  data\r\n    getShareList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/shareParameter/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({share_data:res.data.data})\r\n            console.log(this.state.share_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //edit data\r\n    getsharebyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/shareParameter/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{ \r\n        this.setState({ membertype:res.data.data[0].memberTypeSlno,\r\n                        persharevalue:res.data.data[0].shareValue,\r\n                        min_share:res.data.data[0].minShare,\r\n                        max_share:res.data.data[0].maxShare,\r\n                        dividend_declared:res.data.data[0].dividendDeclared,\r\n                        id:res.data.data[0].slno,\r\n                        editing:true,\r\n                        button:\"Update\"\r\n                    })\r\n        \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/shareParameter/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>Share Parameter</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Share Parameter</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Share Parameter</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"branch\">Member Type</label>\r\n                                                            <select class=\"form-control\" name=\"share\"  value={this.state.membertype}  onChange={this.handleChangemembertype}>\r\n                                                                <option>--Select Membertype--</option>\r\n                                                                {this.state.member_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.memberType}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.membertypeError}</div>}\r\n                                                        </div>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Per Share Value</label>\r\n                                                                <Form.Item name=\"persharevalue\" \r\n                                                                    rules={[{ required: true, message: \"Please enter per share value\" },{pattern:/^[1-9]$/, message:\"Share value should be greter than zero\"}]}>\r\n                                                                    <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Per Share value\" name=\"persharevalue\" value={this.state.persharevalue} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.shareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Minimum Shares</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter Minimum share\" },{pattern:/^[1-9]$/, message:\"Shares should be greter than zero\"}]}>\r\n                                                                <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Minimum Share\" type=\"number\" name=\"min_share\" value={this.state.min_share} onChange={this.handleChange} />\r\n                                                                \r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.MinshareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Maximum Shares</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter maximum share\" },{pattern:/^[1-9]$/, message:\"Shares should be greter than zero\"}]}>\r\n                                                                <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Maximum Share\" type=\"number\" name=\"max_share\" value={this.state.max_share} onChange={this.handleChange} />\r\n                                                                    \r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.MaxshareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Dividend Declared</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter dividend declared\" },{pattern:/^[1-9]*$/, message:\"Dividend declared should be greter than zero\"}]}>\r\n                                                                <Input type='' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Dividend Declared\"  name=\"dividend_declared\" value={this.state.dividend_declared} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.DividendError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                                    <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                                        <thead>\r\n                                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                                <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Member<span style={{visibility:\"hidden\"}}>_</span>Type</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Per<span style={{visibility:\"hidden\"}}>_</span>Share<span style={{visibility:\"hidden\"}}>_</span>Value</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Minimum<span style={{visibility:\"hidden\"}}>_</span>Shares</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Maximum<span style={{visibility:\"hidden\"}}>_</span>Shares</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Dividend<span style={{visibility:\"hidden\"}}>_</span>Declared.</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                                <th style={{textAlign:\"center\"}}><span style={{visibility:\"hidden\"}}>_</span>Action<span style={{visibility:\"hidden\"}}>_</span></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        { this.state.share_data.map((data, index) => \r\n                                                            <tr>\r\n                                                                <td style={{textAlign:\"center\"}}>{index +1}</td>\r\n                                                                <td style={{textAlign:\"left\"}}>{data.memberType}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.shareValue}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.minShare}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.maxShare}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.dividendDeclared}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>  \r\n                                                                    <label className=\"switch\">\r\n                                                                    <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                        <span className=\"slider round\"></span>    \r\n                                                                    </label>\r\n                                                                </td>\r\n                                                                <td style={{textAlign:\"center\"}}>\r\n                                                                    <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                        <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getsharebyslno(data.slno)} ></i>\r\n                                                                    </button>\r\n                                                                    <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                        <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )} \r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Share;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\taluk.js",["151"],"import React, { Component } from 'react';\r\nimport '../../css/Master/taluk.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Taluk extends Component{\r\n    state={\r\n        taluk:'',\r\n        state_data:[],\r\n        district_data:[],\r\n        delete_posts:[],\r\n        taluk_data:[],\r\n        state:'',\r\n        district:'',\r\n        button:\"ADD\",\r\n        id:'',\r\n        editing:false,\r\n        isediting:true,\r\n        talukError:'',\r\n        stateError:'',\r\n        districtError:''\r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.taluk.trim() === ''){\r\n            errors.talukError='Taluk name is required.';\r\n        }\r\n        else if(!this.state.taluk.match(/^[a-zA-Z ]+$/)){\r\n            errors.talukError = \"Taluk name is not correct\";\r\n        }\r\n        if(this.state.state=== '')\r\n            errors.stateError='State is required.';\r\n        if(this.state.district=== '')\r\n            errors.districtError='District is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    // change the country value\r\n    handleChangestate=(e)=>{\r\n        this.setState({state:e.target.value})\r\n    }\r\n    // change the district value\r\n    handleChangedistrict=(e)=>{\r\n        this.setState({district:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // create data\r\n    handleSubmit=()=>{ \r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                taluk:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n            }   \r\n            api.post(`master/taluk/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                taluk:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/taluk/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getstateList();\r\n        this.getdistrictList();\r\n        this.gettalukList();\r\n    }\r\n\r\n    //get taluk data\r\n    gettalukList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({taluk_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get state list\r\n    getstateList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get district list\r\n    getdistrictList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n     \r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/taluk/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n     gettalukbyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({state:res.data.data[0].stateSlno,district:res.data.data[0].districtSlno,taluk:res.data.data[0].taluk,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div  className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10\">\r\n                            <h4>Taluk</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Taluk</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">Taluk</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\t\t\t\t\t\t\t\t\t\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">State</label>\r\n                                                                <select value={this.state.state} onChange={this.handleChangestate} className=\"form-control\">\r\n                                                                    <option>Select State</option>\r\n                                                                    {this.state.state_data.map((data) => \r\n                                                                        <option value={data.slno}>{data.state}</option>\r\n                                                                    )}\r\n                                                                </select>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">District</label>\r\n                                                                <select value={this.state.district} onChange={this.handleChangedistrict} className=\"form-control\">\r\n                                                                    <option>Select District</option>\r\n                                                                    {this.state.district_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.district}</option>\r\n                                                                    )}\r\n                                                                </select>\t\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.districtError}</div>}\t\t\t\t\t\t\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">Taluk</label>\r\n                                                            <input   class=\"form-control\"   placeholder=\"Enter State\" type=\"text\" name=\"taluk\" value={this.state.taluk} onChange={this.handleChange}/> \r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.talukError}</div>}\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>       \r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"example1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>State</th>\r\n                                                    <th style={{textAlign:\"center\"}}>District</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Taluk</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.taluk_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.state}</td> \r\n                                                        <td style={{textAlign:\"left\"}}>{data.district}</td>\r\n                                                        <td style={{textAlign:\"left\"}}>{data.taluk}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>  \r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label>\r\n                                                        </td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.gettalukbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )} \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Taluk;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js",["152"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport '../../css/Master/financialyear.css';\r\nimport 'antd/dist/antd.css';\r\nimport {Form ,Input} from 'antd';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Financialyear extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        fromYear:'',\r\n        toYear:'',\r\n        year_data:[],\r\n        button:'ADD',\r\n        isediting:true,\r\n        editing:false,\r\n        id:'',\r\n        fromyearError:'',\r\n        toyearError:'',\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        debugger\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    \r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getfinancialyearList();\r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.fromYear.trim() === ''){\r\n            errors.fromyearError='From year is required.';\r\n        }\r\n        if(this.state.toYear.trim()=== '')\r\n            errors.toyearError='To year  is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n      // create data\r\n      handleSubmit=async()=>{ \r\n        debugger\r\n        // const errors=this.validate();\r\n        // this.setState({errors})\r\n        // if(errors) return;\r\n        if(this.state.editing===false){  \r\n            try{ \r\n                const value = await this.formRef.current.validateFields();\r\n            const params = {\r\n                fromYear:this.state.fromYear,\r\n                toYear:this.state.toYear    \r\n            }   \r\n            api.post(`master/financialYear/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }catch (errorInfo) {\r\n            console.log(\"failure\", errorInfo);\r\n          }\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                fromYear:this.state.fromYear,\r\n                toYear:this.state.toYear,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/financialYear/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                // message.success(res.data.data);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                // message.error(err.response.data.message);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n        \r\n    //get financialyear data\r\n    getfinancialyearList = () => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/financialYear/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({year_data:res.data.data})\r\n            console.log(this.state.year_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/financialYear/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n    getyearbyslno= (slno) => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/financialYear/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({fromYear:res.data.data.fromYear,toYear:res.data.data.toYear,id:res.data.data.slno,editing:true,button:\"Update\"})\r\n            console.log(this.state.fromYear)\r\n            console.log(this.state.toYear)\r\n            this.formRef.current.setFieldsValue({fromYear:res.data.data.fromYear,toYear:res.data.data.toYear,id:res.data.data.slno})\r\n        })\r\n       \r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 \">\r\n                            <h4>Financial Year</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\",fontSize:\"14px\"}}>Financial Year</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Financial Year</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        {/* <div class=\"form-group col-md-3 col-sm-4\">\r\n                                                            <label class=\"control-label\" for=\"fdate\" style={{fontSize:\"16px\"}}>From Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input type=\"number\" name=\"fromYear\" placeholder=\"From year\" value={this.state.fromYear} onChange={this.handleChange}/>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.fromyearError}</div>}  \r\n                                                        </div> */}\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" style={{fontSize:\"16px\"}}>From Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <Form.Item name=\"fromYear\"  \r\n                                                                    rules={[{ required: true, message: \"Please enter From Year\" },{pattern:/^[1-9]{4}$/, message:\"Numbers should not greater than 4\",maxlength:\"4\"}]}>\r\n                                                                    <Input type='text' style={{width:\"70%\"}}  class=\"form-control\" autocomplete=\"off\" placeholder=\"From year\" maxlength=\"4\" name=\"fromYear\" value={this.state.fromYear} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        {/* </Form>\r\n                                                        <Form ref={this.formRef}> */}\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" style={{fontSize:\"16px\"}}>To Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <Form.Item name=\"toYear\"  \r\n                                                                    rules={[{ required: true, message: \"Please enter To Year\" },{pattern:/^[1-9]{4}$/, message:\"Numbers should not greater than 4\"}]}>\r\n                                                                    <Input type='text' style={{width:\"70%\"}} class=\"form-control\" autocomplete=\"off\" maxlength=\"4\" name=\"toYear\" placeholder=\"To year\" value={this.state.toYear} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        {/* <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"tdate\" style={{fontSize:\"16px\"}}>To Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input type=\"number\" name=\"toYear\" placeholder=\"To year\" value={this.state.toYear}  onChange={this.handleChange}/>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.toyearError}</div>}\r\n                                                        </div> */}\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button onClick= {()=>this.handleSubmit()}  class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\",marginTop:\"28px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>From Date</th>\r\n                                                    <th style={{textAlign:\"center\"}}>To Date</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            { this.state.year_data.map((data, index) =>\r\n                                                <tr>\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.fromYear}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.toYear}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                            <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getyearbyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Financialyear;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js",["153","154","155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Bod.js",["166","167","168"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js",["169"],"import React, { Component } from 'react';\r\nimport '../../css/Master/Bod.css';\r\nimport 'antd/dist/antd.css';\r\nimport api from '../../api/index';\r\nimport moment from 'moment';\r\nimport { DatePicker,Form } from 'antd';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass EOD extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        date:new Date(),\r\n        eod_data:[],\r\n        id:'',\r\n        isediting:true,\r\n        editing:false,\r\n        eodError:'',\r\n        button:'ADD'\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    //validation purpose\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.date === ''){\r\n            errors.eodError='EOD is required.';\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    dateChange=(dateString)=>{\r\n        debugger\r\n        // this.setState({date:dateString})\r\n        this.setState({ date: moment(dateString).format(\"DD/MM/YYYY\")});\r\n      }\r\n   \r\n    //create the data\r\n    handleSubmit=()=>{\r\n        debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                eod:this.state.date, \r\n            }   \r\n            api.post(`master/eod/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            eod:this.state.date, \r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/eod/update`, params)\r\n            .then(res => {      \r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n                \t\r\n            })\r\n            .catch(err=>{\r\n                // message.error(err.response.data.message);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.geteodlist();\r\n    }\r\n\r\n    //get bod list\r\n    geteodlist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/eod/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n          this.setState({eod_data:res.data.data})\r\n            console.log(this.state.eod_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n      //edit data\r\n      geteodbyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/eod/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            var temp= new Date(this.state.date).toString()\r\n            var temp1=moment(new Date(temp.substr(0, 16))) \r\n            this.formRef.current.setFieldsValue({ date: temp1 });\r\n            this.setState({date: res.data.data[0].eod,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n            console.log(this.state.date);\r\n        })\r\n        .catch(err => {\r\n           console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        debugger\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/eod/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n   \r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee;\"}} >\r\n                <div className=\"container-fluid\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 \">\r\n                        <h4>EOD</h4>\r\n                        <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>EOD</p>\r\n                        <div className=\"btnblue heading\"><label className=\"l1\">EOD</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div className=\"form-group col-md-4 col-sm-12\">\r\n                                                            <label className=\"control-label\" for=\"bod\">EOD<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <div className=\"input-group\">\r\n                                                                   <Form ref={this.formRef} >\r\n                                                                    <Form.Item name=\"date\">\r\n                                                                        <DatePicker \r\n                                                                            onChange={this.dateChange}\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                                </Form>\r\n                                                                <span className=\"input-group-btn\">\r\n                                                                <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\"}}>{this.state.button}</button>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-group table-responsive\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                        <table className=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center;\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>EOD</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>Enable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.eod_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"center\"}}>{data.eod}</td>  \r\n                                                        <td style={{textAlign:\"center\"}}>\r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label></td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.geteodbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EOD;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js",["170"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Planparameter.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js",["171","172","173"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js",["174","175","176","177"],"import React, { Component } from 'react';\r\nimport '../../css/Master/navbar.css';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\nrender(){\r\nreturn (\r\n  <div>\r\n  <nav className=\"navbar navbar-inverse navbar-fixed-top bg\" style={{backgroundColor:\"#254d88!important\"}}>\r\n  <div className=\"container-fluid bg\" style={{backgroundColor:\"#254d88!important\"}}>\r\n    <div className=\"navbar-header bg\" style={{backgroundColor:\"#254d88!important\"}}>\r\n        <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-1\" aria-expanded=\"false\">\r\n            <span className=\"sr-only\">Toggle navigation</span>\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n        </button>\r\n        {/* {/ <a className=\"navbar-brand\" href=\"#\">Brand</a> /} */}\r\n    </div>\r\n    <div className=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-1\" style={{overflowY:\"scroll\"}}>\r\n        <ul className=\"nav navbar-nav\">\r\n          \r\n            <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color \" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Manage Settings <span className=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     {/* <li><a href=\"#\">Shortcut Settings</a></li>\r\n                     <li><a href=\"#\">Change Password</a></li> */}\r\n                     <li><a href=\"./financialyear\">Financial Year</a></li>\r\n                     {/* <li><a href=\"#\">View/Update Financial Year</a></li> */}\r\n                     {/* <li><a href=\"#\">Lock Settings</a></li> */}\r\n                     <li><a href=\"./bod\">BOD</a></li>\r\n                     <li><a href=\"./eod\">EOD</a></li>\r\n                     {/* <li><a href=\"#\">View Login Details</a></li>\r\n                     <li><a href=\"#\">Admin Settings</a></li>\r\n                     <li><a href=\"#\">SMS Template</a></li>\r\n                     <li><a href=\"#\">Software Config</a></li>\r\n                     <li><a href=\"#\">Update Content</a></li>\r\n                     <li><a href=\"#\">Header Visibility Setting</a></li> */}\r\n                 </ul>\r\n             </li>\r\n             <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Manage Master <span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li><a href=\"./country\">Country</a></li>\r\n                     <li><a href=\"./state\">State</a></li>\r\n                     {/* <li><a href=\"#\">View/Update State</a></li> */}\r\n                     <li><a href=\"./district\">District</a></li>\r\n                     <li><a href=\"./taluk\">Taluk</a></li>\r\n                     <li><a href=\"./village\">Village</a></li>\r\n                     {/* <li><a href=\"#\">View/Update District</a></li> */}\r\n                     <li><a href=\"./news\">News</a></li>\r\n                     {/* <li><a href=\"#\">View/Update News</a></li> */}\r\n                     <li><a href=\"./ipaddress\">IP Address</a></li>\r\n                     {/* <li><a href=\"#\">View/Update IP Address</a></li> */}\r\n                 </ul>\r\n             </li>\r\n             <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Banking Master <span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     <li><a href=\"./relationship\">Relationship</a></li>\r\n                     <li><a href=\"./share\">Share Parameter</a></li>\r\n                     {/* <li><a href=\"#\">Fee Parameter</a></li> */}\r\n                     {/* <li><a href=\"#\">SB Accounts Parameters</a></li> */}\r\n                     {/* <li><a href=\"#\">Plan Parameters</a></li> */}\r\n                     {/* <li><a href=\"#\">Add Prematurity Slabs</a></li> */}\r\n                     <li><a href=\"./loanondeposit\">Loan On Deposite Parameters</a></li>\r\n                     {/* <li><a href=\"#\">Approvals Limit Parameters</a></li>\r\n                     <li><a href=\"#\">Service Deduction</a></li>\r\n                     <li><a href=\"#\">Deposite TDS Parameter</a></li>\r\n                     <li><a href=\"#\">OD Account Parameters</a></li> */}\r\n                     <li><a href=\"./latefee\">Late Fee Parameter</a></li>\r\n                     <li><a href=\"./holidaylist\">Holiday List</a></li>\r\n                 </ul>\r\n             </li>\r\n             {/* <li><a href=\"index.php\" className=\"color\" style={{paddingRight:\"0px\"}}>Loan</a></li> */}\r\n             <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Manage Branch <span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     <li><a href=\"./branch\">Branch</a></li>\r\n                     {/* <li><a href=\"#\">View/Update Branch</a></li> */}\r\n                     {/* <li><a href=\"#\">IP Wise Enable/Disable</a></li>\r\n                     <li><a href=\"#\">Contact Management</a></li>\r\n                     <li><a href=\"#\">Create Service Center</a></li>\r\n                     <li><a href=\"#\">View Service Center</a></li>\r\n                     <li><a href=\"#\">Add Service Center User</a></li>\r\n                     <li><a href=\"#\">View Service Center User</a></li> */}\r\n                 </ul>\r\n             </li>\r\n             {/* <li><a href=\"index.php\" className=\"color\" style={{paddingRight:\"0px\"}}>Accounting</a></li>\r\n             <li><a href=\"index.php\" className=\"color\" style={{paddingRight:\"0px\"}}>Gold Loan</a></li>\r\n             <li><a href=\"index.php\" className=\"color\" style={{paddingRight:\"0px\"}}>Manage Agent</a></li> */}\r\n             {/* <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>HR Module <span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     <li><a href=\"#\">Designation Master</a></li>\r\n                     <li><a href=\"#\">Designation Menu Rights</a></li>\r\n                     <li><a href=\"#\">Designation Tree View</a></li>\r\n                     <li><a href=\"#\">Branch User Rights</a></li>\r\n                     <li><a href=\"#\">Service Center User Rights</a></li>\r\n                     <li><a href=\"#\">Create Employee</a></li>\r\n                     <li><a href=\"#\">View/Manage Employee</a></li>\r\n                     <li><a href=\"#\">Salary Master</a></li>\r\n                     <li><a href=\"#\">Employee Attendance Daily</a></li>\r\n                     <li><a href=\"#\">Create Monthly Attendance</a></li>\r\n                     <li><a href=\"#\">Create Salary</a></li>\r\n                     <li><a href=\"#\">Make Payment Salary</a></li>\r\n                     <li><a href=\"#\">View Monthly Attendance</a></li>\r\n                     <li><a href=\"#\">View Paid Salary</a></li>\r\n                     <li><a href=\"#\">Salary Summary Report</a></li>\r\n                     <li><a href=\"#\">View Staff User</a></li>\r\n                 </ul>\r\n             </li> */}\r\n             {/* <li><a href=\"index.php\" className=\"color\" style={{paddingRight:\"0px\"}}>Reports</a></li>\r\n             <li className=\"dropdown\">\r\n                <a href=\"#\" className=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Transfer Request<span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     <li><a href=\"#\">Request</a></li>\r\n                 </ul>\r\n             </li> */}\r\n              {/* <li className=\"dropdown\">\r\n                <a href=\"#\" class=\"dropdown-toggle color\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{paddingRight:\"0px\"}}>Modification<span class=\"caret\"></span></a>\r\n                <ul className=\"dropdown-menu\">\r\n                     <li><a href=\"#\">Policy Modification</a></li>\r\n                     <li><a href=\"#\">Change Nominee</a></li>\r\n                     <li><a href=\"#\">Change SB Account Type</a></li>\r\n                     <li><a href=\"#\">Senior Citizen ROI Change</a></li>\r\n                     <li><a href=\"#\">Update Member Date</a></li>\r\n                     <li><a href=\"#\">Deposite Member Change</a></li>\r\n                     <li><a href=\"#\">Delete Account Transfer</a></li>\r\n                     <li><a href=\"#\">Delete Accounts</a></li>\r\n\r\n\r\n                 </ul>\r\n             </li> */}\r\n         </ul>\r\n     </div>\r\n  </div>\r\n</nav>\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Loanondeposit.js",["178","179","180"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js",["181","182"],"import React, { Component } from 'react';\r\n// import '../css/Latefeeparameter.css';\r\n// import '../css/toastr.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass Latefeeparameter extends Component{\r\n    \r\n        state={\r\n            name:'',\r\n            premium_data:[],\r\n            premiumtype:'',\r\n            latefee:'',\r\n            latefee_data:[],\r\n            graceperiod_data:[],\r\n            graceperiod:'',\r\n            delete_posts:[],\r\n            edit_data:[],\r\n            default_value:'',\r\n            button:\"ADD\",\r\n            message:'',\r\n            id:'',\r\n            editing:false,\r\n            stateError:'',\r\n            errors:{},\r\n            stateError:'',\r\n            districtError:'',\r\n            talukError:'',\r\n            isediting:true\r\n            }\r\n    \r\n            validate=()=>{\r\n                debugger\r\n                const errors={};\r\n                if(this.state.state.trim() === ''){\r\n                errors.stateError='State name is required.';\r\n                }\r\n                else if(!this.state.state.match(/^[a-zA-Z ]+$/)){\r\n                errors.stateError = \"State name is not correct\";\r\n                }\r\n                if(this.state.country=== '')\r\n                errors.countryError='Country is required.';\r\n                return Object.keys(errors).length=== 0 ? null : errors;\r\n                }\r\n\r\n        handleChangecompoundingperiod=(e)=>{\r\n            this.setState({premiumtype:e.target.value})\r\n        }\r\n        \r\n        //for latefee and grace period\r\n        handleChange=(e)=>{\r\n              debugger     \r\n            this.setState({[e.target.name]:e.target.value})\r\n            }\r\n\r\n            //handle change for enable button\r\nhandleEnableChange=(e) =>{\r\n    this.setState({\r\n    [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n    });\r\n    }\r\n\r\n  //get premiumtype data\r\ngetpremiumList = () => {\r\n    var config = {\r\n    method: 'post',\r\n    url: 'master/compoundingPeriod/get',\r\n    headers: {\"content-type\": \"application/json\"},\r\n    data :{}\r\n    };\r\n    api(config).then(res=>{\r\n    this.setState({premium_data:res.data.data})\r\n    console.log(this.state.premium_data);\r\n    }).catch(err=>{\r\n    console.log(err);\r\n    })\r\n    }\r\n  \r\n //get grace period data\r\n getgraceperiodList = () => {\r\n    debugger\r\n    var config = {\r\n    method: 'post',\r\n    url: 'master/lateFeeParameter/get',\r\n    headers: {\"content-type\": \"application/json\"},\r\n    data :{}\r\n    };\r\n    api(config).then(res=>{\r\n    this.setState({graceperiod_data:res.data.data})\r\n    console.log(this.state.graceperiod_data);\r\n    }).catch(err=>{\r\n    console.log(err);\r\n    })\r\n    }\r\n\r\n\r\n\r\nhandleSubmit=()=>{\r\nif(this.state.editing===false){\r\nconst params = {\r\ncompoundingPeriodSlno:this.state.premiumtype,\r\nlateFees:this.state.latefee,\r\ngracePeriod:this.state.graceperiod\r\n}\r\n\r\napi.post(`master/lateFeeParameter/create`, params)\r\n.then(res => {\r\nthis.setState({editing:false})\r\nconsole.log(res)\r\n\r\nthis.setState({message:res.data})\r\n// toast.success(this.state.message.data,{position:\"top-right\"});\r\nconsole.log(this.state.message)\r\nthis.getgraceperiodList();\r\n})\r\n\r\n.catch(err=>{\r\n   \r\n    console.log(err);\r\n    // toast.error(err.message);\r\n})\r\n}\r\nelse\r\n{\r\n    debugger\r\nconst params = {\r\nslno:this.state.id,\r\ncompoundingPeriodSlno:this.state.premiumtype,\r\nlateFees:this.state.latefee,\r\ngracePeriod:this.state.graceperiod,\r\nisActive:this.state.isediting\r\n}\r\napi.post(`master/lateFeeParameter/update`, params)\r\n.then(res => {\r\nconsole.log(res)\r\n// this.getstateList();\r\nthis.getgraceperiodList();\r\n})\r\n.catch(err=>{\r\nconsole.log(err);\r\n})\r\n}\r\n\r\n}\r\n\r\n //delete row\r\ndeletedata=(slno)=> {\r\n    confirm({\r\n    title: 'Are you sure delete this list?',\r\n    icon: <ExclamationCircleOutlined />,\r\n    okText: 'Yes',\r\n    okType: 'danger',\r\n    cancelText: 'No',\r\n    onOk(){\r\n    var config = {\r\n    method: 'post',\r\n    url: 'master/lateFeeParameter/delete',\r\n    headers: {\"content-type\": \"application/json\"},\r\n    data :{\r\n    \"slno\":slno,\r\n    }\r\n    };\r\n    api(config).then(res => {\r\n    console.log(res.data)\r\n    message.success(res.data.data);\r\n    setTimeout(function(){window.location.reload(); }, 1000);\r\n    })\r\n    .catch(err=>{\r\n    console.log(err);\r\n    message.error(err.response.data.message);\r\n    setTimeout(function(){window.location.reload(); }, 1000);\r\n    })\r\n    },\r\n    onCancel() {\r\n    console.log(\"Cancel\");\r\n    }\r\n    });\r\n    }\r\n    \r\n    \r\n\r\n     //edit data\r\ngetlatefeeByslno= (slno) => {\r\n    debugger\r\n    var config = {\r\n    method: 'post',\r\n    url: 'master/lateFeeParameter/getBySlno',\r\n    headers: {\"content-type\": \"application/json\"},\r\n    data :{\r\n    \"slno\":slno,\r\n    }\r\n    };\r\n    console.log(config)\r\n    api(config).then(res=>{\r\n        this.setState({edit_data:res.data.message,premiumtype:res.data.data[0].compoundingPeriodSlno,latefee:res.data.data[0].LateFees,graceperiod:res.data.data[0].GracePeriod,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n    console.log(this.state.premiumtype)\r\n    console.log(this.state.lateFees)\r\n    console.log(this.state.gracePeriod)\r\n})\r\n    .catch(err => {\r\n    console.log(err)\r\n    })\r\n    }\r\n   \r\n\r\n    componentDidMount() {\r\n        //         $(document).ready(function () {\r\n        //             $('#example1').DataTable({\r\n        //                 lengthMenu:[[3,5,10,15,-1],[3,5,10,15,'ALL']]\r\n        //             })\r\n        // });\r\n        \r\n        this.getpremiumList ();\r\n        this.getgraceperiodList();\r\n             }\r\n        \r\nrender(){\r\nreturn(\r\n<div style={{backgroundColor:\"#eeeeee\"}}>\r\n{/* <ToastContainer /> */}\r\n    <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-1 col-sm-1\"></div>\r\n                <div className=\"col-md-10 col-sm-10\">\r\n                    <h4>Late Fee Parameter</h4>\r\n                    <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Late Fee Parameter</p>\r\n                        <div className=\"btnblue heading\"><label className=\"l1\">Late Fee Parameter</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <form>\r\n                                                    <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                        <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                            <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label className=\"control-label\" for=\"premium_type\">Premium Type\r\n                                                                <span style={{color:\"red\"}}>*</span></label>\r\n                                                                    <select onChange={this.handleChangecompoundingperiod} className=\"form-control\" value={this.state.premiumtype} onChange={this.handleChange} id=\"active\" name=\"premiumtype\">\r\n                                                                        <option value=\"\" disabled selected>Premium Type</option>\r\n                                                                        {this.state.premium_data.map((data) =>\r\n                                                                        <option value={data.slno}>{data.compoundingPeriod}</option>\r\n                                                            )}\r\n                                                                    </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label className=\"control-label\" for=\"late_fee\">Late Fee(%)\r\n                                                                <span style={{color:\"red\"}}>*</span></label>\r\n                                                                <input className=\"form-control\" id=\"late_fee\" name=\"latefee\" placeholder=\"Enter Late Fee\" type=\"text\" value={this.state.latefee} onChange={this.handleChange} />\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label className=\"control-label\" for=\"grace_period\">Grace Period(Days)\r\n                                                                <span style={{color:\"red\"}}>*</span></label>\r\n                                                                <input className=\"form-control\" id=\"grace_period\" name=\"graceperiod\" placeholder=\"Enter Grace Period\" value={this.state.graceperiod} type=\"text\" onChange={this.handleChange} />\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-3 col-sm-3\" style={{marginTop:\"-14px\"}}>\r\n                                                                    <button onClick= {()=>this.handleSubmit()}  class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"38px\"}}>{this.state.button}</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-group table-responsive tb\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                        <table className=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                            <tr style={{color:\"#3869ae\"}}>\r\n\r\n                                            <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                            <th style={{textAlign:\"center\"}}>Premium<span style={{visibility:\"hidden\"}}>_</span>Type</th>\r\n                                            <th style={{textAlign:\"center\"}}>Late<span style={{visibility:\"hidden\"}}>_</span>Fee</th>\r\n                                            <th style={{textAlign:\"center\"}}>Grace<span style={{visibility:\"hidden\"}}>_</span>Period</th>\r\n\r\n                                            <th style={{textAlign:\"center\"}}><span style={{visibility:\"hidden\"}}>_</span>Action<span style={{visibility:\"hidden\"}}>_</span></th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                  { this.state.graceperiod_data.map((data, index) =>\r\n                                            <tr>\r\n                                                <td style={{textAlign:\"center\"}}>{index +1}</td>\r\n                                                <td style={{textAlign:\"left\"}}>{data.memberTypeName}</td>\r\n                                                <td style={{textAlign:\"left\"}}>{data.LateFees}</td>\r\n                                                <td style={{textAlign:\"left\"}}>{data.GracePeriod}</td>\r\n                                              \r\n                                                <td style={{textAlign:\"center\"}}>\r\n                                                <label className=\"switch\">\r\n                                                    <input type=\"checkbox\" defaultChecked={data.isActive} onChange={this.handleEnableChange}/>\r\n                                                    <span className=\"slider round\"></span>    \r\n                                                </label>\r\n                                                <button className=\"btn w3-white edit-data\" id=\"1\">\r\n                                                <i className=\"fa fa-pencil text-primary\" onClick={(e) => this.getlatefeeByslno(data.slno)}>\r\n                                                </i>\r\n                                                </button>\r\n                                                <button className=\"btn w3-white delete-data\" id=\"1\">\r\n                                                <i className=\"fa fa-trash text-danger\" onClick={(e) => this.deletedata(data.slno)}>\r\n                                                </i>\r\n                                                </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                            )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                 </div>\r\n                            </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\n}\r\n\r\nexport default Latefeeparameter;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\deposit.js",["183"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass deposit extends Component{\r\n    state={\r\n        depositType_data:[],\r\n        loanondeposit_data:[],\r\n        depositType:'',\r\n        loanondeposit_amount:'',\r\n        loan_roi:'',\r\n        interest:'',\r\n        button:\"ADD\",\r\n        isediting:true,\r\n        editing:false,\r\n        deposittypeError:'',\r\n        loandepositError:'',\r\n        loanRoiError:'',\r\n        interesttypeError:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDepositTypeList();\r\n        this.getloanonDepositList();\r\n    }\r\n\r\n     //validation purpose\r\n     validate=()=>{\r\n        const errors={};\r\n        if(this.state.depositType === ''){\r\n            errors.deposittypeError='Deposit type is required.';\r\n        }\r\n        if(this.state.loanondeposit_amount === ''){\r\n            errors.loandepositError='Loan deposit  is required.';\r\n        }\r\n        if(this.state.depositType === ''){\r\n            errors.countryError='Deposit type is required.';\r\n        }\r\n        if(this.state.interest === ''){\r\n            errors.interesttypeError='Interest type is required.';\r\n        }\r\n        if(this.state.loan_roi === ''){\r\n            errors.loanRoiError='Loan ROI  is required.';\r\n        }\r\n        else if(!this.state.country.match(/^[a-zA-Z ]+$/)){\r\n            errors.countryError = \"The country name is not correct\";\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    \r\n    //get country data\r\n    getDepositTypeList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/depositType/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({depositType_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    getloanonDepositList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/loanOnDepositParameter/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({loanondeposit_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    handleChange=(e)=>{\r\n        debugger\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    // handleInterestChange=()=>{\r\n    //     this.setState({intrest:e.target.value})\r\n    // }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the country value\r\n    handleChangedeposit=(e)=>{\r\n        debugger\r\n        this.setState({depositType:e.target.value})\r\n    }\r\n\r\n    handleSubmit=()=>{\r\n        debugger\r\n        // e.preventDefault()\r\n     \r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        // if(this.state.editing===false){  \r\n                const params = {\r\n                    depositTypeSlno:this.state.depositType,\r\n                    loanRoi:this.state.loan_roi,\r\n                    loanRate:this.state.loanondeposit_amount,\r\n                    interestCalculation:this.state.interest\r\n                }   \r\n                api.post(`master/loanOnDepositParameter/create`, params)      \r\n                .then(res =>{     \r\n                    this.setState({editing:false})\r\n                    message.success(res.data.data);\r\n                    console.log(res.data.data)\r\n                    // setTimeout(function(){window.location.reload(); }, 1000);\r\n                    // this.getstateList();   \r\n                })\r\n                .catch(err=>{\r\n                    // message.error(err.response.data.message);\r\n                    // setTimeout(function(){window.location.reload(); }, 1000);\r\n                })\r\n        // }\r\n        // else\r\n        // {\r\n        // const params = {\r\n        //     slno:this.state.id,\r\n        //     state:this.state.state,\r\n        //     countrySlno:this.state.country,\r\n        //     isActive:this.state.isediting\r\n        // }    \r\n        // api.post(`master/state/update`, params)\r\n        // .then(res => {      \r\n        //     console.log(res);\r\n        //     message.success(res.data.data);\r\n        //     setTimeout(function(){window.location.reload(); }, 1000);\t\r\n        // })\r\n        // .catch(err=>{\r\n        //     console.log(err);\r\n        //     message.error(err.response.data.message);\r\n        //     setTimeout(function(){window.location.reload(); }, 1000);     \r\n        // })\r\n        // }\r\n    }\r\n      //delete row\r\n      deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/loanOnDepositParameter/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\nrender(){\r\nreturn(\r\n<div style={{backgroundColor:\"#eeeeee\"}}>\r\n    <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-1 col-sm-1\"></div>\r\n            <div className=\"col-md-10 col-sm-10\">\r\n                <h4>Loan On Deposite Parameters</h4>\r\n                <p className=\"pstyle\">Loan On Deposite Parameters</p>\r\n                <div className=\"btnblue heading\"><label className=\"l1\">Loan On Deposite Parameters</label></div>\r\n                <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                    <div className=\"panel-body\">\r\n                        <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12 col-sm-12\">\r\n                                    {/* <form> */}\r\n                                        <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                            <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                    <label className=\"control-label labelfont\" for=\"deposit_type\" >Deposit Type</label>\r\n                                                    <select class=\"form-control\" name=\"deposit_type\"  value={this.state.country}  onChange={this.handleChangedeposit}>\r\n                                                            <option>--Select Deposit Type--</option>\r\n                                                            {this.state.depositType_data.map((data) => \r\n                                                                <option value={data.slno}>{data.depositType}</option>             \r\n                                                            )}\r\n                                                    </select>\r\n                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.deposittypeError}</div>}\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                    <label className=\"control-label\" for=\"loanrate\" style={{fontSize: \"16px\"}}>Loan Rate on Deposit Amount %</label>\r\n                                                    <input className=\"form-control\"  name=\"loanondeposit_amount\" value={this.state.loanondeposit_amount} onChange={this.handleChange} placeholder=\"Enter Loan Rate on Deposit Amount\" type=\"text\" />\r\n                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.loandepositError}</div>}\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                    <label className=\"control-label labelfont\" for=\"interest\" >Interest Calculation</label>\r\n                                                    <select className=\"form-control\"  name=\"interest\" value={this.state.interest} onChange={this.handleChange}>\r\n                                                        <option value=\"\">--Select Interest Calculation--</option>\r\n                                                        <option value=\"months\">months</option>\r\n                                                    </select>\r\n                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.interesttypeError}</div>}\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                    <label className=\"control-label\" for=\"loanrate\" style={{fontSize: \"16px\"}}>Loan ROI above Deposite Rate(E)</label>\r\n                                                    <input className=\"form-control\" id=\"loanroi\" name=\"loan_roi\" value={this.state.loan_roi} onChange={this.handleChange} placeholder=\"Enter Loan ROI\" type=\"text\" />\r\n                                                        <span style={{float: \"right\",fontSize:\"12px\"}}>%(per annum)</span>\r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.loanRoiError}</div>}\r\n                                                </div>\r\n\r\n                                                \r\n\r\n                                                <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    {/* </form> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                            <table className=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                <thead>\r\n                                    <tr style={{color:\"#3869ae\"}}>\r\n                                        <th style={{textAlign:\"center\"}}>Sl<span className=\"thdata\">_</span>No.</th>\r\n                                        <th style={{textAlign:\"Left\"}}>Deposit<span className=\"thdata\">_</span>Type</th>\r\n                                        <th style={{textAlign:\"Left\"}}>Loan<span className=\"thdata\">_</span>Rate</th>\r\n                                        <th style={{textAlign:\"Left\"}}>Interest</th>\r\n                                        <th style={{textAlign:\"Left\"}}>Loan<span className=\"thdata\">_</span>ROI</th>\r\n                                        <th className=\"thaction\">Enable / Disable</th>\r\n                                        <th className=\"thaction\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                            { this.state.loanondeposit_data.map((data, index) => \r\n                                                <tr role=\"row\" className=\"odd\">\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.depositType}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.loanRate}</td> \r\n                                                    <td style={{textAlign:\"left\"}}>{data.interestCalculation}</td> \r\n                                                    <td style={{textAlign:\"left\"}}>{data.loanRoi}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                        <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td  style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getstatebyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}  \r\n                                    </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n)\r\n}\r\n}\r\n\r\nexport default deposit;",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"184","replacedBy":"188"},{"ruleId":"186","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":23},{"ruleId":"190","severity":1,"message":"194","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":20},{"ruleId":"184","replacedBy":"195"},{"ruleId":"186","replacedBy":"196"},{"ruleId":"184","replacedBy":"197"},{"ruleId":"186","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":226,"column":124,"nodeType":"201","endLine":226,"endColumn":143},{"ruleId":"199","severity":1,"message":"200","line":230,"column":137,"nodeType":"201","endLine":230,"endColumn":156},{"ruleId":"199","severity":1,"message":"200","line":255,"column":137,"nodeType":"201","endLine":255,"endColumn":156},{"ruleId":"199","severity":1,"message":"200","line":182,"column":136,"nodeType":"201","endLine":182,"endColumn":155},{"ruleId":"199","severity":1,"message":"200","line":261,"column":125,"nodeType":"201","endLine":261,"endColumn":144},{"ruleId":"184","replacedBy":"202"},{"ruleId":"186","replacedBy":"203"},{"ruleId":"190","severity":1,"message":"204","line":92,"column":23,"nodeType":"192","messageId":"193","endLine":92,"endColumn":28},{"ruleId":"199","severity":1,"message":"200","line":277,"column":160,"nodeType":"201","endLine":277,"endColumn":173},{"ruleId":"199","severity":1,"message":"200","line":288,"column":160,"nodeType":"201","endLine":288,"endColumn":173},{"ruleId":"199","severity":1,"message":"200","line":305,"column":128,"nodeType":"201","endLine":305,"endColumn":147},{"ruleId":"199","severity":1,"message":"200","line":255,"column":129,"nodeType":"201","endLine":255,"endColumn":148},{"ruleId":"190","severity":1,"message":"204","line":58,"column":23,"nodeType":"192","messageId":"193","endLine":58,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":83,"column":47,"nodeType":"207","messageId":"208","endLine":83,"endColumn":48,"suggestions":"209"},{"ruleId":"205","severity":1,"message":"210","line":83,"column":49,"nodeType":"207","messageId":"208","endLine":83,"endColumn":50,"suggestions":"211"},{"ruleId":"205","severity":1,"message":"212","line":83,"column":51,"nodeType":"207","messageId":"208","endLine":83,"endColumn":52,"suggestions":"213"},{"ruleId":"205","severity":1,"message":"206","line":83,"column":70,"nodeType":"207","messageId":"208","endLine":83,"endColumn":71,"suggestions":"214"},{"ruleId":"205","severity":1,"message":"210","line":83,"column":72,"nodeType":"207","messageId":"208","endLine":83,"endColumn":73,"suggestions":"215"},{"ruleId":"205","severity":1,"message":"212","line":83,"column":74,"nodeType":"207","messageId":"208","endLine":83,"endColumn":75,"suggestions":"216"},{"ruleId":"205","severity":1,"message":"206","line":83,"column":93,"nodeType":"207","messageId":"208","endLine":83,"endColumn":94,"suggestions":"217"},{"ruleId":"205","severity":1,"message":"210","line":83,"column":95,"nodeType":"207","messageId":"208","endLine":83,"endColumn":96,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"212","line":83,"column":97,"nodeType":"207","messageId":"208","endLine":83,"endColumn":98,"suggestions":"219"},{"ruleId":"205","severity":1,"message":"206","line":83,"column":116,"nodeType":"207","messageId":"208","endLine":83,"endColumn":117,"suggestions":"220"},{"ruleId":"205","severity":1,"message":"210","line":83,"column":118,"nodeType":"207","messageId":"208","endLine":83,"endColumn":119,"suggestions":"221"},{"ruleId":"205","severity":1,"message":"212","line":83,"column":120,"nodeType":"207","messageId":"208","endLine":83,"endColumn":121,"suggestions":"222"},{"ruleId":"199","severity":1,"message":"200","line":442,"column":125,"nodeType":"201","endLine":442,"endColumn":144},{"ruleId":"190","severity":1,"message":"223","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":20},{"ruleId":"190","severity":1,"message":"224","line":5,"column":21,"nodeType":"192","messageId":"193","endLine":5,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":206,"column":132,"nodeType":"201","endLine":206,"endColumn":151},{"ruleId":"199","severity":1,"message":"200","line":195,"column":132,"nodeType":"201","endLine":195,"endColumn":151},{"ruleId":"190","severity":1,"message":"204","line":86,"column":19,"nodeType":"192","messageId":"193","endLine":86,"endColumn":24},{"ruleId":"190","severity":1,"message":"225","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":35},{"ruleId":"190","severity":1,"message":"226","line":7,"column":9,"nodeType":"192","messageId":"193","endLine":7,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":174,"column":124,"nodeType":"201","endLine":174,"endColumn":143},{"ruleId":"227","severity":1,"message":"228","line":25,"column":17,"nodeType":"229","endLine":25,"endColumn":169},{"ruleId":"227","severity":1,"message":"228","line":43,"column":17,"nodeType":"229","endLine":43,"endColumn":168},{"ruleId":"227","severity":1,"message":"228","line":59,"column":17,"nodeType":"229","endLine":59,"endColumn":168},{"ruleId":"227","severity":1,"message":"228","line":78,"column":17,"nodeType":"229","endLine":78,"endColumn":168},{"ruleId":"190","severity":1,"message":"225","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":35},{"ruleId":"190","severity":1,"message":"226","line":5,"column":9,"nodeType":"192","messageId":"193","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":168,"column":117,"nodeType":"201","endLine":168,"endColumn":136},{"ruleId":"230","severity":1,"message":"231","line":30,"column":13,"nodeType":"232","messageId":"233","endLine":30,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":243,"column":179,"nodeType":"201","endLine":243,"endColumn":207},{"ruleId":"199","severity":1,"message":"200","line":244,"column":117,"nodeType":"201","endLine":244,"endColumn":136},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],["234"],["235"],"no-unused-vars","'CreateIPaddress' is defined but never used.","Identifier","unusedVar","'CreateBranch' is defined but never used.",["234"],["235"],["234"],["235"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["234"],["235"],"'value' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["236","237"],"Unnecessary escape character: \\).",["238","239"],"Unnecessary escape character: \\..",["240","241"],["242","243"],["244","245"],["246","247"],["248","249"],["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],"'DatePicker' is defined but never used.","'Form' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'confirm' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'stateError'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"260","fix":"261","desc":"262"},{"messageId":"263","fix":"264","desc":"265"},{"messageId":"260","fix":"266","desc":"262"},{"messageId":"263","fix":"267","desc":"265"},{"messageId":"260","fix":"268","desc":"262"},{"messageId":"263","fix":"269","desc":"265"},{"messageId":"260","fix":"270","desc":"262"},{"messageId":"263","fix":"271","desc":"265"},{"messageId":"260","fix":"272","desc":"262"},{"messageId":"263","fix":"273","desc":"265"},{"messageId":"260","fix":"274","desc":"262"},{"messageId":"263","fix":"275","desc":"265"},{"messageId":"260","fix":"276","desc":"262"},{"messageId":"263","fix":"277","desc":"265"},{"messageId":"260","fix":"278","desc":"262"},{"messageId":"263","fix":"279","desc":"265"},{"messageId":"260","fix":"280","desc":"262"},{"messageId":"263","fix":"281","desc":"265"},{"messageId":"260","fix":"282","desc":"262"},{"messageId":"263","fix":"283","desc":"265"},{"messageId":"260","fix":"284","desc":"262"},{"messageId":"263","fix":"285","desc":"265"},{"messageId":"260","fix":"286","desc":"262"},{"messageId":"263","fix":"287","desc":"265"},"removeEscape",{"range":"288","text":"289"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"290","text":"291"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"292","text":"289"},{"range":"293","text":"291"},{"range":"294","text":"289"},{"range":"295","text":"291"},{"range":"296","text":"289"},{"range":"297","text":"291"},{"range":"298","text":"289"},{"range":"299","text":"291"},{"range":"300","text":"289"},{"range":"301","text":"291"},{"range":"302","text":"289"},{"range":"303","text":"291"},{"range":"304","text":"289"},{"range":"305","text":"291"},{"range":"306","text":"289"},{"range":"307","text":"291"},{"range":"308","text":"289"},{"range":"309","text":"291"},{"range":"310","text":"289"},{"range":"311","text":"291"},{"range":"312","text":"289"},{"range":"313","text":"291"},[2729,2730],"",[2729,2729],"\\",[2731,2732],[2731,2731],[2733,2734],[2733,2733],[2752,2753],[2752,2752],[2754,2755],[2754,2754],[2756,2757],[2756,2756],[2775,2776],[2775,2775],[2777,2778],[2777,2777],[2779,2780],[2779,2779],[2798,2799],[2798,2798],[2800,2801],[2800,2800],[2802,2803],[2802,2802]]