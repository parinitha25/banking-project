[{"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js":"1","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js":"2","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js":"3","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js":"4","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js":"5","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js":"6","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js":"7","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\SBaccount.js":"8","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js":"9","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js":"10","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\deposit.js":"11","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js":"12","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js":"13","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js":"14","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js":"15","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js":"16","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js":"17","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js":"18","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js":"19","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":8920,"mtime":1610167451071,"results":"23","hashOfConfig":"22"},{"size":12319,"mtime":1610009005388,"results":"24","hashOfConfig":"22"},{"size":15135,"mtime":1610099596702,"results":"25","hashOfConfig":"22"},{"size":21119,"mtime":1610095621663,"results":"26","hashOfConfig":"22"},{"size":27717,"mtime":1610098781078,"results":"27","hashOfConfig":"22"},{"size":11343,"mtime":1610108795236,"results":"28","hashOfConfig":"22"},{"size":15458,"mtime":1610167065780,"results":"29","hashOfConfig":"22"},{"size":2965,"mtime":1610167150983,"results":"30","hashOfConfig":"22"},{"size":152,"mtime":1610167481747,"results":"31","hashOfConfig":"22"},{"size":15767,"mtime":1610169572184,"results":"32","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"22"},{"size":13041,"mtime":1609940592528,"results":"34","hashOfConfig":"22"},{"size":10823,"mtime":1610113073591,"results":"35","hashOfConfig":"22"},{"size":15302,"mtime":1610090912775,"results":"36","hashOfConfig":"22"},{"size":11375,"mtime":1610081126457,"results":"37","hashOfConfig":"22"},{"size":18280,"mtime":1610082983750,"results":"38","hashOfConfig":"22"},{"size":13715,"mtime":1610109802324,"results":"39","hashOfConfig":"22"},{"size":14680,"mtime":1610107543588,"results":"40","hashOfConfig":"22"},{"size":13836,"mtime":1610009099371,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7qkwa2",{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js",["94","95","96","97"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js",[],["98","99"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js",["100","101","102","103"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport {Form ,Input} from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Share extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        member_data:[],\r\n        share_data:[],\r\n        membertype:'',\r\n        persharevalue:'',\r\n        min_share:'',\r\n        max_share:'',\r\n        dividend_declared:'',\r\n        editing:false,\r\n        isediting:true,\r\n        button:\"ADD\",\r\n        membertypeError:'',\r\n        shareError:'',\r\n        MinshareError:'',\r\n        MaxshareError:'',\r\n        DividendError:'',\r\n        id:''\r\n    }\r\n\r\n    validate=()=>{\r\n        debugger\r\n        const errors={};\r\n        if(this.state.membertype === ''){\r\n            errors.membertypeError='Member  type is required.';\r\n        }\r\n        if(this.state.persharevalue === ''){\r\n            errors.shareError='Per share value  is required.';\r\n        }\r\n        // else if(!this.state.persharevalue.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.shareError = \"Per share value is not correct\";\r\n        // }\r\n        if(this.state.min_share === ''){\r\n            errors.MinshareError='Minimum share is required.';\r\n        }\r\n        // else if(!this.state.min_share.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.MinshareError = \"Minimum share is not correct\";\r\n        // }\r\n      \r\n        if(this.state.max_share === ''){\r\n            errors.MaxshareError='Maximum share is required.';\r\n        }\r\n        // else if(!this.state.max_share.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.MaxshareError = \"Maximum share is not correct\";\r\n        // }\r\n        if(this.state.dividend_declared === ''){\r\n            errors.DividendError='Dividend declared is required.';\r\n        }\r\n        // else if(!this.state.dividend_declared.match(/^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$/)){\r\n        //     errors.DividendError = \"Dividend declared is not correct\";\r\n        // }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n   \r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        this.getMembertypeList();\r\n        this.getShareList();\r\n    }\r\n\r\n    // change the member type value\r\n    handleChangemembertype=(e)=>{\r\n        debugger\r\n        this.setState({membertype:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n     handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit=async()=>{\r\n        // const errors=this.validate();\r\n        // this.setState({errors})\r\n        // if(errors) return;\r\n       \r\n        if(this.state.editing===false){ \r\n            try{ \r\n                const value = await this.formRef.current.validateFields();\r\n                const params = {\r\n                    memberTypeSlno:this.state.membertype,\r\n                    shareValue:this.state.persharevalue,\r\n                    minShare:this.state.min_share,\r\n                    maxShare:this.state.max_share,\r\n                    dividendDeclared:this.state.dividend_declared\r\n                }   \r\n                api.post(`master/shareParameter/create`, params)      \r\n                .then(res =>{     \r\n                    this.setState({editing:false})\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                    // this.getMembertypeList();   \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                })\r\n            }catch (errorInfo) {\r\n            console.log(\"failure\", errorInfo);\r\n          }\r\n    \r\n}\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            memberTypeSlno:this.state.membertype,\r\n            shareValue:this.state.persharevalue,\r\n            minShare:this.state.min_share,\r\n            maxShare:this.state.max_share,\r\n            dividendDeclared:this.state.dividend_declared,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/shareParameter/update`, params)\r\n        .then(res => {      \r\n            console.log(res);\r\n            message.success(res.data.data);\r\n            setTimeout(function(){window.location.reload(); }, 1000);\t\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            message.error(err.response.data.message);\r\n            setTimeout(function(){window.location.reload(); }, 1000);     \r\n        })\r\n        }\r\n    }\r\n    //get member  data\r\n    getMembertypeList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/memberType/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({member_data:res.data.data})\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n     \r\n    //get share  data\r\n    getShareList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/shareParameter/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({share_data:res.data.data})\r\n            console.log(this.state.share_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //edit data\r\n    getsharebyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/shareParameter/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{ \r\n        this.setState({ membertype:res.data.data[0].memberTypeSlno,\r\n                        persharevalue:res.data.data[0].shareValue,\r\n                        min_share:res.data.data[0].minShare,\r\n                        max_share:res.data.data[0].maxShare,\r\n                        dividend_declared:res.data.data[0].dividendDeclared,\r\n                        id:res.data.data[0].slno,\r\n                        editing:true,\r\n                        button:\"Update\"\r\n                    })\r\n        \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/shareParameter/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>Share Parameter</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Share Parameter</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Share Parameter</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"branch\">Member Type</label>\r\n                                                            <select class=\"form-control\" name=\"share\"  value={this.state.membertype}  onChange={this.handleChangemembertype}>\r\n                                                                <option>--Select Membertype--</option>\r\n                                                                {this.state.member_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.memberType}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.membertypeError}</div>}\r\n                                                        </div>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Per Share Value</label>\r\n                                                                <Form.Item name=\"persharevalue\" \r\n                                                                    rules={[{ required: true, message: \"Please enter per share value\" },{pattern:/^[1-9]$/, message:\"Share value should be greter than zero\"}]}>\r\n                                                                    <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Per Share value\" name=\"persharevalue\" value={this.state.persharevalue} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.shareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Minimum Shares</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter Minimum share\" },{pattern:/^[1-9]$/, message:\"Shares should be greter than zero\"}]}>\r\n                                                                <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Minimum Share\" type=\"number\" name=\"min_share\" value={this.state.min_share} onChange={this.handleChange} />\r\n                                                                \r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.MinshareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Maximum Shares</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter maximum share\" },{pattern:/^[1-9]$/, message:\"Shares should be greter than zero\"}]}>\r\n                                                                <Input type='number' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Maximum Share\" type=\"number\" name=\"max_share\" value={this.state.max_share} onChange={this.handleChange} />\r\n                                                                    \r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.MaxshareError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" for=\"per_share_value\">Dividend Declared</label>\r\n                                                                <Form.Item name=\"no_of_units\" \r\n                                                                    rules={[{ required: true, message: \"Please enter dividend declared\" },{pattern:/^[1-9]*$/, message:\"Dividend declared should be greter than zero\"}]}>\r\n                                                                <Input type='' class=\"form-control\" autocomplete=\"off\" placeholder=\"Enter Dividend Declared\"  name=\"dividend_declared\" value={this.state.dividend_declared} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                                {/* {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.DividendError}</div>} */}\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                                    <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                                        <thead>\r\n                                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                                <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Member<span style={{visibility:\"hidden\"}}>_</span>Type</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Per<span style={{visibility:\"hidden\"}}>_</span>Share<span style={{visibility:\"hidden\"}}>_</span>Value</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Minimum<span style={{visibility:\"hidden\"}}>_</span>Shares</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Maximum<span style={{visibility:\"hidden\"}}>_</span>Shares</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Dividend<span style={{visibility:\"hidden\"}}>_</span>Declared.</th>\r\n                                                                <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                                <th style={{textAlign:\"center\"}}><span style={{visibility:\"hidden\"}}>_</span>Action<span style={{visibility:\"hidden\"}}>_</span></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        { this.state.share_data.map((data, index) => \r\n                                                            <tr>\r\n                                                                <td style={{textAlign:\"center\"}}>{index +1}</td>\r\n                                                                <td style={{textAlign:\"left\"}}>{data.memberType}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.shareValue}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.minShare}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.maxShare}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>{data.dividendDeclared}</td>\r\n                                                                <td style={{textAlign:\"center\"}}>  \r\n                                                                    <label className=\"switch\">\r\n                                                                    <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                        <span className=\"slider round\"></span>    \r\n                                                                    </label>\r\n                                                                </td>\r\n                                                                <td style={{textAlign:\"center\"}}>\r\n                                                                    <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                        <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getsharebyslno(data.slno)} ></i>\r\n                                                                    </button>\r\n                                                                    <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                        <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )} \r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Share;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js",["104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Branch extends Component{\r\n    state={\r\n        state_data:[],\r\n        district_data:[],\r\n        village_data:[],\r\n        taluk_data:[],\r\n        branch_data:[],\r\n        state:'',\r\n        district:'',\r\n        taluk:'',\r\n        village:'',\r\n        button:'ADD',\r\n        branch_name:'',\r\n        phone_no:'',\r\n        mobile_no:'',\r\n        email:'',\r\n        contact_name:'',\r\n        branch_place:'',\r\n        pincode:'',\r\n        isediting:true,\r\n        editing:false,\r\n        stateError:'',\r\n        districtError:'',\r\n        villageError:'',\r\n        talukError:'',\r\n        branchError:'',\r\n        branchPlaceError:'',\r\n        mobileNoError:'',\r\n        phoneNoError:'',\r\n        emailError:'',\r\n        contactNameError:'',\r\n        pincodeError:''\r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.state=== ''){\r\n            errors.stateError='State name is required.';\r\n        }\r\n        if(this.state.district=== ''){\r\n            errors.districtError='District name is required.';\r\n        }\r\n        if(this.state.taluk=== ''){\r\n            errors.talukError='Taluk name is required.';\r\n        }\r\n        // if(this.state.village=== ''){\r\n        //     errors.villageError='village name is required.';\r\n        // }\r\n        if(this.state.branch_name.trim()=== ''){\r\n            errors.branchError='Branch name is required.';\r\n        }\r\n        else if(!this.state.branch_name.match(/^[a-zA-Z ]+$/)){\r\n            errors.branchError = \"Branch name is not correct\";\r\n        }\r\n        if(this.state.branch_place.trim()=== ''){\r\n            errors.branchPlaceError='Branch Place is required.';\r\n        }\r\n        else if(!this.state.branch_place.match(/^[a-zA-Z]+$/)){\r\n            errors.branchError = \"Branch Place is not correct\";\r\n        }   \r\n        if(this.state.pincode=== ''){\r\n            errors.pincodeError='Pincode is required.';\r\n        }\r\n        // else if(!this.state.pincode.match(/^[0-9]{5}$/)){\r\n        //     errors.pincodeError = \"Pincode is not correct\";\r\n        // }\r\n        if(this.state.mobile_no=== ''){\r\n            errors.mobileNoError='Mobile Number is required.';\r\n        }\r\n        else if(!this.state.mobile_no.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)){\r\n            errors.mobileNoError = \"Mobile Number is not correct\";\r\n        }\r\n        if(this.state.phone_no===''){\r\n            errors.phoneNoError='Phone Number is required.';\r\n        }\r\n        else if(!this.state.phone_no.match(/^[\\(\\)\\.\\- ]{0,}[0-9]{3}[\\(\\)\\.\\- ]{0,}[0-9]{3}[\\(\\)\\.\\- ]{0,}[0-9]{4}[\\(\\)\\.\\- ]{0,}$/)){\r\n            errors.phoneNoError = \"Phone Number is not correct\";\r\n        }\r\n        if(this.state.email.trim()=== ''){\r\n            errors.emailError='Email  is required.';\r\n        }\r\n        else if(!this.state.email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)){\r\n            errors.emailError = \"Email is not correct\";\r\n        }\r\n        if(this.state.contact_name.trim()=== ''){\r\n            errors.contactNameError='Contact name is required.';\r\n        }\r\n        else if(!this.state.contact_name.match(/^[a-zA-Z ]+$/)){\r\n            errors.contactNameError = \"Contact name is not correct\";\r\n        }\r\n\r\n        \r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getstateList();\r\n        this.getdistrictList();\r\n        this.gettalukList();\r\n        this.getvillageList();\r\n        this.getbranchList();\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n    // change the state value\r\n    handleChangestate=(e)=>{\r\n        debugger\r\n        this.setState({state:e.target.value})\r\n    }\r\n    // change the district value\r\n    handleChangedistrict=(e)=>{\r\n        debugger\r\n        this.setState({district:e.target.value})\r\n    }\r\n      // change the taluk value\r\n      handleChangetaluk=(e)=>{\r\n        debugger\r\n        this.setState({taluk:e.target.value})\r\n    }\r\n      // change the village value\r\n      handleChangevillage=(e)=>{\r\n        debugger\r\n        this.setState({village:e.target.value})\r\n    }\r\n\r\n      // create data\r\n      handleSubmit=()=>{ \r\n          debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                talukSlno:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n                villageSlno:this.state.village,\r\n                branchName:this.state.branch_name,\r\n                branchPlace:this.state.branch_place,\r\n                pincode:this.state.pincode,\r\n                mobileNo:this.state.mobile_no,\r\n                email:this.state.email,\r\n                phoneNo:this.state.phone_no, \r\n                contactName:this.state.contact_name\r\n            }   \r\n            api.post(`master/branch/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }\r\n        else{\r\n            debugger\r\n            const params = { \r\n                slno:this.state.id,\r\n                talukSlno:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n                villageSlno:this.state.village,\r\n                branchName:this.state.branch_name,\r\n                branchPlace:this.state.branch_place,\r\n                pincode:this.state.pincode,\r\n                mobileNo:this.state.mobile_no,\r\n                email:this.state.email,\r\n                phoneNo:this.state.phone_no, \r\n                contactName:this.state.contact_name,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/branch/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                // message.success(res.data.data);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                // message.error(err.response.data.message);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n    //get taluk data\r\n    gettalukList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({taluk_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n    \r\n    //get village data\r\n     getvillageList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/village/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({village_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get state list\r\n    getstateList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get district list\r\n    getdistrictList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    //get taluk data\r\n    getbranchList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/branch/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({branch_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    //edit data\r\n    getbranchbyslno= (slno) => {\r\n        debugger\r\n       var config = {\r\n           method: 'post',\r\n           url: 'master/branch/getBySlno',\r\n           headers: {\"content-type\": \"application/json\"},\r\n           data :{ \r\n             \"slno\":slno,\r\n           }                 \r\n       };\r\n       console.log(config)\r\n       api(config).then(res=>{\r\n       this.setState({\r\n                    state:res.data.data[0].stateSlno,\r\n                    district:res.data.data[0].districtSlno,\r\n                    taluk:res.data.data[0].talukSlno,\r\n                    village:res.data.data[0].villageSlno,\r\n                    branch_name:res.data.data[0].branchName,\r\n                    branch_place:res.data.data[0].branchPlace, \r\n                    pincode:res.data.data[0].pincode,\r\n                    mobile_no:res.data.data[0].mobileNo,\r\n                    phone_no:res.data.data[0].phoneNo,\r\n                    email:res.data.data[0].email,\r\n                    contact_name:res.data.data[0].contactName,\r\n                    id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n       console.log(this.state.country)\r\n       })\r\n       .catch(err => {\r\n           console.log(err)\r\n       })\r\n   }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        debugger\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/branch/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data);\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n            <div  className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1 col-sm-1\"></div>\r\n                    <div className=\"col-md-10 col-sm-10\">\r\n                        <h4>Branch</h4>\r\n                        <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Branch</p>\r\n                        <div className=\"btnblue heading\"><label className=\"l1\">Branch</label></div>\r\n                        <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                            <div className=\"panel-body\">\r\n                                <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                    <div className=\"row\">\t\t\t\t\t\t\t\t\t\r\n                                        <div className=\"form-group col-md-12 col-sm-12\">\r\n                                            <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">State<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <select value={this.state.state} onChange={this.handleChangestate} className=\"form-control\">\r\n                                                                <option>Select State</option>\r\n                                                                {this.state.state_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.state}</option>\r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">District<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <select value={this.state.district} onChange={this.handleChangedistrict} className=\"form-control\">\r\n                                                                <option>Select District</option>\r\n                                                                {this.state.district_data.map((data) => \r\n                                                                <option value={data.slno}>{data.district}</option>\r\n                                                                )}\r\n                                                            </select>\t\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.districtError}</div>}\t\t\t\t\t\t\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Taluk<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <select value={this.state.taluk} onChange={this.handleChangetaluk} className=\"form-control\">\r\n                                                                <option>Select Taluk</option>\r\n                                                                {this.state.taluk_data.map((data) => \r\n                                                                <option value={data.slno}>{data.taluk}</option>\r\n                                                                )}\r\n                                                            </select>\t\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.talukError}</div>}\t\t\t\t\t\t\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Village</label>\r\n                                                            <select value={this.state.village} onChange={this.handleChangevillage} className=\"form-control\">\r\n                                                                <option>Select Village</option>\r\n                                                                {this.state.village_data.map((data) => \r\n                                                                <option value={data.slno}>{data.village}</option>\r\n                                                                )}\r\n                                                            </select>\t\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.villageError}</div>}\t\t\t\t\t\t\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Branch<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Enter Branch\" type=\"text\" name=\"branch_name\" value={this.state.branch_name} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.branchError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Branch Place<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Branch Place\" type=\"text\" name=\"branch_place\" value={this.state.branch_place} onChange={this.handleChange} /> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.branchPlaceError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Pincode<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Pincode\" type=\"text\" name=\"pincode\" maxlength=\"4\" value={this.state.pincode} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.pincodeError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Mobile Number<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Mobile Number\" type=\"text\" name=\"mobile_no\" maxlength=\"10\" value={this.state.mobile_no} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.mobileNoError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Phone Number<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Phone Number\" type=\"text\" name=\"phone_no\" maxlength=\"10\" value={this.state.phone_no} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.phoneNoError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Email<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Email\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.emailError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label className=\"control-label\" for=\"city\">Contact Name<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\"   placeholder=\"Contact name\" type=\"text\" name=\"contact_name\" value={this.state.contact_name} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.contactNameError}</div>}\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>       \r\n                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                    <table class=\"table table-bordered table-hover table-striped\" id=\"example1\">\r\n                                        <thead>\r\n                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                <th style={{textAlign:\"Left\"}}>State</th>\r\n                                                <th style={{textAlign:\"Left\"}}>District</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Taluk</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Village</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Branch Name</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Branch Place</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Pincode</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Phone Number</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Mobile Number</th>\r\n                                                <th style={{textAlign:\"Left\"}}>Contact Name</th>\r\n                                                <th style={{textAlign:\"center\"}}>Email</th>\r\n                                                <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                <th style={{textAlign:\"center\"}}>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            { this.state.branch_data.map((data, index) => \r\n                                                <tr role=\"row\" className=\"odd\">\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                    <td style={{textAlign:\"center\"}}>{data.state}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.district}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.taluk}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.village}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.branchName}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.branchPlace}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.pincode}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.phoneNo}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>{data.mobileNo}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.contactName}</td>  \r\n                                                    <td style={{textAlign:\"center\"}}>{data.email}</td> \r\n                                                   \r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                            <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td  style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getbranchbyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )} \r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Branch;",["117","118"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js",["119","120","121"],"import React, { Component } from 'react';\r\n// import '../css/ipaddress.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass ipaddress extends Component{\r\n    state={\r\n        branch_data:[],\r\n        ipaddress_data:[],\r\n        isediting:true,\r\n        editing:false,\r\n        ipaddress:'',\r\n        branch:'',\r\n        button:'ADD',\r\n        id:'',\r\n        branchError:'',\r\n        ipaddressError:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getbranchList();\r\n        this.getipaddressList();\r\n       \r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        debugger\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the country value\r\n    handleChangebranch=(e)=>{\r\n        debugger\r\n        this.setState({branch:e.target.value})\r\n    }\r\n \r\n      //validation purpose\r\n      validate=()=>{\r\n        const errors={};\r\n        if(this.state.branch === ''){\r\n            errors.branchError='Branch  is required.';\r\n        }\r\n        if(this.state.ipaddress === ''){\r\n            errors.ipaddressError='IP Address  is required.';\r\n        }\r\n        else if(!this.state.ipaddress.match(/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)){\r\n            errors.ipaddressError = \"The IP Address  is not correct\";\r\n            //255.255.255.255\r\n            //127.0.0.1\r\n//192.168.1.1\r\n//192.168.1.255\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //create the data\r\n    handleSubmit=()=>{\r\n        debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                ipAddress:this.state.ipaddress,\r\n                branchSlno:this.state.branch\r\n            }   \r\n            api.post(`master/ipAddress/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            ipAddress:this.state.ipaddress,\r\n            branchSlno:this.state.branch,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/ipAddress/update`, params)\r\n            .then(res => {      \r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n                this.getCountryList();\t\t\r\n            })\r\n            .catch(err=>{\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n\r\n    //get branch list\r\n    getbranchList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/branch/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({branch_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n       //get branch list\r\n       getipaddressList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/ipAddress/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({ipaddress_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n    render(){\r\n        return(\r\n        <div style={{backgroundColor:\"#eeeeee\"}}>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10\">\r\n                        <h4>Add IP Address</h4>\r\n                        <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Add IP Address</p>\r\n                        <div className=\"btnblue heading\"><label className=\"l1\">Add IP Address</label></div>\r\n                        <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                            <div class=\"panel-body\">\r\n                                <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"form-group col-md-12 col-sm-12\">\r\n                                            <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"plan\" style={{fontSize: \"16px\"}}>Select Branch</label> <span style={{color: \"red\"}}>*</span>\r\n                                                        <select class=\"form-control\" name=\"branch\"  value={this.state.branch}  onChange={this.handleChangebranch}>\r\n                                                            <option>--Select Branch--</option>\r\n                                                            {this.state.branch_data.map((data) => \r\n                                                                <option value={data.slno}>{data.branchName}</option>             \r\n                                                            )}\r\n                                                        </select>\r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.branchError}</div>}  \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"ipaddress\" style={{fontSize: \"16px\"}}>IP Address</label> <span style={{color: \"red\"}}>*</span>\t\r\n                                                        <input class=\"form-control\" id=\"ipaddress\" name=\"ipaddress\" placeholder=\"Enter IP Address\" type=\"text\" value={this.state.ipaddress} onChange={this.handleChange}/>\r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.ipaddressError}</div>}  \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\"}}>{this.state.button}</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                    <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                        <thead>\r\n                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                <th style={{textAlign:\"center\"}}>Branch<span style={{visibility:\"hidden\"}}>_</span>Type</th>\r\n                                                <th style={{textAlign:\"center\"}}>IP<span style={{visibility:\"hidden\"}}>_</span>Address</th>\r\n                                                <th style={{textAlign:\"center\",paddingRight:\"50px\",paddingLeft:\"50px\"}}>Enable / Disable</th>\r\n                                                <th style={{textAlign:\"center\",paddingRight:\"50px\",paddingLeft:\"50px\"}}>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            { this.state.ipaddress_data.map((data, index) => \r\n                                                <tr role=\"row\" className=\"odd\">\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                    <td style={{textAlign:\"center\"}}>{data.branchName}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.ipAddress}</td>  \r\n                                                    <td style={{textAlign:\"center\"}}>\r\n                                                        <label className=\"switch\">\r\n                                                            <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label></td>\r\n                                                    <td  style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getcountrybyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}  \r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ipaddress;",["122","123"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\SBaccount.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js",["124","125"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from './Components/Master/Navbar';\nimport CreateIPaddress from '../src/Components/Master/createIPaddress';\n// import CreateNews from '../src/Components/Master/createNews';\nimport Relationship from '../src/Components/Master/Relationship';\nimport CreateBranch from '../src/Components/Master/createBranch';\nimport state from '../src/Components/Master/state';\nimport District from './Components/Master/District';\nimport News from './Components/Master/News';\nimport Taluk from './Components/Master/taluk';\nimport Country from './Components/Master/Country';\nimport Village from './Components/Master/Village';\nimport Share from './Components/Master/share';\nimport Financialyear from './Components/Master/Financialyear';\nimport Branch from './Components/Master/Branch';\nimport Bod from './Components/Master/Bod';\nimport Eod from './Components/Master/Eod';\nimport Holidaylist from './Components/Master/HolidayList';\nimport Planparameter from './Components/Master/Planparameter';\nimport IPaddress from './Components/Master/IPaddress';\nimport Deposit from './Components/Master/deposit';\nimport Latefeeparameter from './Components/Master/LateFeeparameter';\nimport SBaccount from './Components/Master/SBaccount';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n  return (\n    <div> \n       <Navbar />\n        <Router >\n          <Switch>\n            <Route exact path='/ipaddress' component={IPaddress}></Route>\n            <Route exact path='/relationship' component={Relationship}></Route> \n            {/* <Route exact path='/branch' component={CreateBranch}></Route>    */}\n            <Route exact path='/state' component={state}></Route>      \n            <Route exact path='/district' component={District}></Route>   \n            <Route exact path='/news' component={News}></Route>   \n            <Route exact path='/taluk' component={Taluk}></Route>  \n            <Route exact path='/village' component={Village}></Route>  \n            <Route exact path='/country' component={Country}></Route>  \n            <Route exact path='/share' component={Share}></Route>  \n            <Route exact path='/financialyear' component={Financialyear}></Route>  \n            <Route exact path='/branch' component={Branch}></Route>  \n            <Route exact path='/bod' component={Bod}></Route>  \n            <Route exact path='/eod' component={Eod}></Route>  \n            <Route exact path='/holidaylist' component={Holidaylist}></Route>  \n            <Route exact path='/planparameter' component={Planparameter}></Route>\n            <Route exact path='/loanondeposit' component={Deposit}></Route>\n            <Route exact path='/latefee' component={Latefeeparameter}></Route>\n            <Route exact path='/sbaccount' component={SBaccount}></Route>\n          </Switch>\n          </Router>\n\n    </div>\n     );\n  }\n}\n\nexport default App;\n","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\deposit.js",["126"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js",["127"],"import React, { Component } from 'react';\r\nimport '../../css/Master/state.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass State extends Component{\r\n    state={\r\n        state:'',\r\n        country:'' ,\r\n        state_data:[],\r\n        country_data:[],\r\n        delete_posts:[],   \r\n        button:\"ADD\",\r\n        id:'',\r\n        editing:false,\r\n        stateError:'',\r\n        countryError:'',\r\n        errors:{},\r\n        isediting:true\r\n    }\r\n\r\n    validate=()=>{\r\n        debugger\r\n        const errors={};\r\n        if(this.state.state.trim() === ''){\r\n            errors.stateError='State name is required.';\r\n        }\r\n        else if(!this.state.state.match(/^[a-zA-Z ]+$/)){\r\n            errors.stateError = \"State name is not correct\";\r\n        }\r\n        if(this.state.country=== '')\r\n            errors.countryError='Country is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n   \r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the country value\r\n    handleChangecountry=(e)=>{\r\n        debugger\r\n        this.setState({country:e.target.value})\r\n    }\r\n \r\n    handleSubmit=()=>{\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n                const params = {\r\n                    state:this.state.state,\r\n                    countrySlno:this.state.country\r\n                }   \r\n                api.post(`master/state/create`, params)      \r\n                .then(res =>{     \r\n                    this.setState({editing:false})\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                    this.getstateList();   \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);\r\n                })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            state:this.state.state,\r\n            countrySlno:this.state.country,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/state/update`, params)\r\n        .then(res => {      \r\n            console.log(res);\r\n            message.success(res.data.data);\r\n            setTimeout(function(){window.location.reload(); }, 1000);\t\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            message.error(err.response.data.message);\r\n            setTimeout(function(){window.location.reload(); }, 1000);     \r\n        })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getstateList();\r\n        this.getcountrylist();\r\n    }\r\n    \r\n    //get state data\r\n    getstateList = () => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n            console.log(this.state.state_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get country list\r\n    getcountrylist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n          this.setState({country_data:res.data.data})\r\n            console.log(this.state.country_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n     //edit data\r\n     getstatebyslno= (slno) => {\r\n         debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        console.log(config)\r\n        api(config).then(res=>{\r\n        this.setState({country:res.data.data[0].countrySlno,state:res.data.data[0].state,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        console.log(this.state.country)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/state/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(    \r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div  className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>State</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>State</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">State</label></div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\t\t\r\n                                      \t\t<div class=\"form-group col-md-12 col-sm-12\">\r\n                                            <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"city\">Country<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <select class=\"form-control\" name=\"country\"  value={this.state.country}  onChange={this.handleChangecountry}>\r\n                                                            <option>--Select Country--</option>\r\n                                                            {this.state.country_data.map((data) => \r\n                                                                <option value={data.slno}>{data.country}</option>             \r\n                                                            )}\r\n                                                        </select>\r\n                     \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.countryError}</div>}\r\n                                                      \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <label class=\"control-label\" for=\"city\">State<span style={{color:\"red\"}}>*</span></label>\r\n                                                        <input   class=\"form-control\" id=\"myInput\"  placeholder=\"Enter State\" type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}/> \r\n                                                        {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}    \r\n                                                    </div>\r\n                                                    <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                    </div>\r\n                                                   </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>       \r\n                                <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                    <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                        <thead>\r\n                                            <tr style={{color:\"#3869ae\"}}>\r\n                                                <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                <th style={{textAlign:\"center\"}}>Country</th>\r\n                                                <th style={{textAlign:\"center\"}}>State</th>\r\n                                                <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                <th style={{textAlign:\"center\"}}>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            { this.state.state_data.map((data, index) => \r\n                                                <tr role=\"row\" className=\"odd\">\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.country}</td>  \r\n                                                    <td style={{textAlign:\"left\"}}>{data.state}</td> \r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                        <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td  style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getstatebyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}  \r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>              \r\n        )\r\n    }\r\n}\r\n\r\nexport default State;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js",["128"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Country extends Component{\r\n    state = {\r\n        country: \"\",\r\n        country_data:[],\r\n        countryError:'',\r\n        button:\"ADD\",\r\n        errors:{},\r\n        id:'',\r\n        editing:false,\r\n        isediting:true,\r\n        isActive:''\r\n    };\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    //validation purpose\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.country.trim() === ''){\r\n            errors.countryError='country name is required.';\r\n        }\r\n        else if(!this.state.country.match(/^[a-zA-Z ]+$/)){\r\n            errors.countryError = \"The country name is not correct\";\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //create the data\r\n    handleSubmit=()=>{\r\n        debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                country:this.state.country\r\n            }   \r\n            api.post(`master/country/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            country:this.state.country,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/country/update`, params)\r\n            .then(res => {      \r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n                this.getCountryList();\t\t\r\n            })\r\n            .catch(err=>{\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCountryList();\r\n    }\r\n    \r\n    //get country data\r\n    getCountryList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({country_data:res.data.data})\r\n            console.log(this.state.country_data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //edit data\r\n    getcountrybyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({country:res.data.data.country,id:res.data.data.slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n           console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/country/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>Country</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Country</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Country</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-5 col-sm-12\">\r\n                                                            <label class=\"control-label\" for=\"city\">Country</label>\r\n                                                            <div class=\"input-group\">\r\n                                                                <input class=\"form-control\"  placeholder=\"Enter Country\" type=\"text\" name=\"country\" value={this.state.country} onChange={this.handleChange}/> \r\n                                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.countryError}</div>}  \r\n                                                                <span class=\"input-group-btn\">\r\n                                                                    <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\"}}>{this.state.button}</button>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Country</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.country_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.country}</td>  \r\n                                                        <td style={{textAlign:\"center\"}}>\r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label></td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getcountrybyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Country;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js",["129"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass village extends Component{\r\n    state={\r\n        taluk_data:[],\r\n        district_data:[],\r\n        village_data:[],\r\n        village:'',\r\n        districtError:'',\r\n        talukError:'',\r\n        villageError:'',\r\n        taluk:'',\r\n        district:'',\r\n        isediting:true,\r\n        editing:false,\r\n        button:'ADD',\r\n        id:''\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // change the district value\r\n    handleChangedistrict=(e)=>{\r\n        debugger\r\n        this.setState({district:e.target.value})\r\n    }\r\n\r\n    // change the taluk value\r\n    handleChangetaluk=(e)=>{\r\n        debugger\r\n        this.setState({taluk:e.target.value})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getdistrictList();  \r\n        this.gettalukList();  \r\n        this.getvillageList();\r\n        \r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.village.trim() === ''){\r\n            errors.villageError='Village name is required.';\r\n        }\r\n        else if(!this.state.village.match(/^[a-zA-Z]+$/)){\r\n            errors.villageError = \"Village name is not correct\";\r\n        }\r\n        if(this.state.taluk=== '')\r\n            errors.talukError='Taluk is required.';\r\n\r\n        if(this.state.district=== '')\r\n            errors.districtError='District is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n    // create data\r\n     handleSubmit=()=>{ \r\n         debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                village:this.state.village,\r\n                districtSlno:this.state.district,\r\n                talukSlno:this.state.taluk,\r\n            }   \r\n            api.post(`master/village/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                village:this.state.village,\r\n                districtSlno:this.state.district,\r\n                talukSlno:this.state.taluk,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/village/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n\r\n    //get taluk list\r\n    gettalukList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({taluk_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n    //get village list\r\n    getvillageList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/village/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({village_data:res.data.data})\r\n            console.log(this.state.village_data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get district list\r\n    getdistrictList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/village/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n    getvillagebyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/village/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({district:res.data.data[0].districtSlno,taluk:res.data.data[0].talukSlno,village:res.data.data[0].village,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10\">\r\n                            <h4>Village</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Village</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">Village</label></div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"district\" style={{fontSize: \"16px\"}}>District</label> <span style={{color: \"red\"}}>*</span>\r\n                                                            <select class=\"form-control\" name=\"district\"  value={this.state.district}  onChange={this.handleChangedistrict}>\r\n                                                                <option>--Select District--</option>\r\n                                                                {this.state.district_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.district}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.districtError}</div>}\t\r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"taluk\" style={{fontSize: \"16px\"}}>Taluk</label> <span style={{color: \"red\"}}>*</span>\r\n                                                            <select class=\"form-control\" name=\"taluk\"  value={this.state.taluk}  onChange={this.handleChangetaluk}>\r\n                                                                <option>--Select District--</option>\r\n                                                                {this.state.taluk_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.taluk}</option>             \r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.talukError}</div>}\t\r\n                     \r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"village\" style={{fontSize: \"16px\"}}>Village</label> <span style={{color: \"red\"}}>*</span>\t\r\n                                                            <input class=\"form-control\"  name=\"village\" placeholder=\"Enter Village\" type=\"text\"  value={this.state.village} onChange={this.handleChange}/>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.villageError}</div>}\t\r\n                                                        </div>\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                        <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>District</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Taluk</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Village</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.village_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.district}</td> \r\n                                                        <td style={{textAlign:\"left\"}}>{data.taluk}</td>\r\n                                                        <td style={{textAlign:\"left\"}}>{data.village}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>  \r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label>\r\n                                                        </td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getvillagebyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )} \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default village;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js",["130"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js",["131"],"import React, { Component } from 'react';\r\nimport '../../css/Master/holidaylist.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport { DatePicker,Form } from 'antd';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass HolidayList extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        branch:'',\r\n        holiday_data:[],\r\n        branch_data:[],\r\n        financialyear_data:[],\r\n        date:new Date(),\r\n        holiday_name:'',\r\n        financial_year:'',\r\n        button:'ADD',\r\n        isediting:true,\r\n        editing:false,\r\n        branchError:'',\r\n        financilayearError:'',\r\n        holidaydateError:'',\r\n        holidaynameError:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    //change branch value\r\n      handleChangebranch=(e)=>{\r\n        this.setState({branch:e.target.value})\r\n    }\r\n     //change financialyear value\r\n     handleChangefinancialyear=(e)=>{\r\n        this.setState({financial_year:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n     handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n    dateChange=(dateString)=>{\r\n        debugger\r\n        // this.setState({date:dateString})\r\n        this.setState({ date: moment(dateString).format(\"YYYY/MM/DD\")});\r\n      }\r\n    componentDidMount(){\r\n        this.getholidaylist();\r\n        this.getbranchList();\r\n        this.getfinancialyearList();\r\n    }\r\n\r\n    //validation purpose\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.branch === ''){\r\n            errors.branchError='Branch name is required.';\r\n        }\r\n        if(this.state.financial_year === ''){\r\n            errors.financilayearError='Financial year is required.';\r\n        }\r\n        if(this.state.date === ''){\r\n            errors.holidaydateError='Holiday date is required.';\r\n        }\r\n        if(this.state.holiday_name.trim() === ''){\r\n            errors.holidaynameError='Holiday name is required.';\r\n        }\r\n      \r\n       \r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //create the data\r\n    handleSubmit=async()=>{\r\n        debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            try{ \r\n            const value = await this.formRef.current.validateFields();\r\n            const params = {\r\n                branchSlno:this.state.branch,\r\n                financialYearSlno:this.state.financial_year,\r\n                holidayDate:this.state.date,\r\n                holidayName:this.state.holiday_name,\r\n\r\n            }   \r\n            api.post(`master/holidayList/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }catch (errorInfo) {\r\n            console.log(\"failure\", errorInfo);\r\n          }\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            branchSlno:this.state.branch,\r\n            financialYearSlno:this.state.financial_year,\r\n            holidayDate:this.state.date,\r\n            holidayName:this.state.holiday_name,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/holidayList/update`, params)\r\n            .then(res => {      \r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\r\n            })\r\n            .catch(err=>{\r\n                // message.error(err.response.data.message);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n    //get taluk data\r\n    getbranchList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/branch/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({branch_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    //get financialyear data\r\n    getfinancialyearList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/financialYear/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({financialyear_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //get bod list\r\n    getholidaylist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/holidayList/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n          this.setState({holiday_data:res.data.data})\r\n            console.log(this.state.holiday_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n     //delete row\r\n     deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/holidayList/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    dateChange=(dateString)=>{\r\n        debugger\r\n        // this.setState({date:dateString})\r\n        this.setState({ date: moment(dateString).format(\"DD/MM/YYYY\")});\r\n    }\r\n   \r\n    //edit data\r\n    getholidaylistbyslno= (slno) => {\r\n        debugger\r\n      var config = {\r\n          method: 'post',\r\n          url: 'master/holidayList/getBySlno',\r\n          headers: {\"content-type\": \"application/json\"},\r\n          data :{ \r\n              \"slno\":slno,\r\n          }                 \r\n      };\r\n      api(config).then(res=>{\r\n        var temp= new Date(this.state.date).toString()\r\n        var temp1=moment(new Date(temp.substr(0, 16))) \r\n        this.formRef.current.setFieldsValue({ date: temp1 });\r\n        this.setState({branch:res.data.data[0].branchSlno,financial_year:res.data.data[0].financialYearSlno,holiday_name:res.data.data[0].holidayName,date:res.data.data[0].holidayDate,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        console.log(this.state.date);\r\n      })\r\n      .catch(err => {\r\n         console.log(err)\r\n      })\r\n  }\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee;\"}} >\r\n                <div className=\"container-fluid\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 \">\r\n                            <h4>Holiday List</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Holiday List</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">Holiday List</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"bod\">Select Branch<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <select value={this.state.branch} onChange={this.handleChangebranch} className=\"form-control\">\r\n                                                                <option>Select Branch</option>\r\n                                                                {this.state.branch_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.branchName}</option>\r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.branchError}</div>}  \r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"financial_year\">Financial Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <select value={this.state.financial_year} onChange={this.handleChangefinancialyear} className=\"form-control\">\r\n                                                                <option>Select Financial Year</option>\r\n                                                                {this.state.financialyear_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.fromYear}-{data.toYear}</option>\r\n                                                                )}\r\n                                                            </select>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.financilayearError}</div>}  \r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label className=\"control-label\" for=\"holiday_date\">Holiday Date\r\n                                                                <span style={{color:\"red\"}}>*</span></label>\r\n                                                                <Form ref={this.formRef} >\r\n                                                                    <Form.Item name=\"date\" rules={[{ required: true, message: \"Holiday date is required\" }]}>\r\n                                                                        <DatePicker \r\n                                                                            onChange={this.dateChange}\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                                  \r\n                                                                </Form>\r\n                                                                 \r\n                                                        </div>\r\n                                                      \r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"holiday_name\">Holiday Name\r\n                                                            <span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input className=\"form-control\" name=\"holiday_name\" onChange={this.handleChange} placeholder=\"Enter Holiday Name\" type=\"text\" value={this.state.holiday_name}/>\r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.holidaynameError}</div>}  \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\" >\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\" >\r\n                                                            <span className=\"input-group-btn\">\r\n                                                                <button onClick={() => this.handleSubmit()}  class=\"btn  btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginTop:'25px'}}>{this.state.button}</button>\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-group table-responsive\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                        <table className=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center;\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>Branch</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>Financial Year</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>Holdiay Date</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>Holdiay Name</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.holiday_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.branchName}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.financialYear}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.holidayDate}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.holidayName}</td>  \r\n                                                        <td style={{textAlign:\"center\"}}>\r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label></td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getholidaylistbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HolidayList;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js",["132","133"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js",["134"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport '../../css/Master/financialyear.css';\r\nimport 'antd/dist/antd.css';\r\nimport {Form ,Input} from 'antd';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Financialyear extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        fromYear:'',\r\n        toYear:'',\r\n        year_data:[],\r\n        button:'ADD',\r\n        isediting:true,\r\n        editing:false,\r\n        id:'',\r\n        fromyearError:'',\r\n        toyearError:'',\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        debugger\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    \r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getfinancialyearList();\r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.fromYear.trim() === ''){\r\n            errors.fromyearError='From year is required.';\r\n        }\r\n        if(this.state.toYear.trim()=== '')\r\n            errors.toyearError='To year  is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n      // create data\r\n      handleSubmit=async()=>{ \r\n        debugger\r\n        // const errors=this.validate();\r\n        // this.setState({errors})\r\n        // if(errors) return;\r\n        if(this.state.editing===false){  \r\n            try{ \r\n                const value = await this.formRef.current.validateFields();\r\n            const params = {\r\n                fromYear:this.state.fromYear,\r\n                toYear:this.state.toYear    \r\n            }   \r\n            api.post(`master/financialYear/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                message.success(res.data.data);\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                message.error(err.response.data.message);\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }catch (errorInfo) {\r\n            console.log(\"failure\", errorInfo);\r\n          }\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                fromYear:this.state.fromYear,\r\n                toYear:this.state.toYear,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/financialYear/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                // message.success(res.data.data);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                // message.error(err.response.data.message);\r\n                // setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n        \r\n    //get financialyear data\r\n    getfinancialyearList = () => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/financialYear/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({year_data:res.data.data})\r\n            console.log(this.state.year_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/financialYear/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                    message.success(res.data.data);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                    message.error(err.response.data.message);\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n    getyearbyslno= (slno) => {\r\n        debugger\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/financialYear/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({fromYear:res.data.data.fromYear,toYear:res.data.data.toYear,id:res.data.data.slno,editing:true,button:\"Update\"})\r\n            console.log(this.state.fromYear)\r\n            console.log(this.state.toYear)\r\n            this.formRef.current.setFieldsValue({fromYear:res.data.data.fromYear,toYear:res.data.data.toYear,id:res.data.data.slno})\r\n        })\r\n       \r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 \">\r\n                            <h4>Financial Year</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\",fontSize:\"14px\"}}>Financial Year</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Financial Year</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        {/* <div class=\"form-group col-md-3 col-sm-4\">\r\n                                                            <label class=\"control-label\" for=\"fdate\" style={{fontSize:\"16px\"}}>From Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input type=\"number\" name=\"fromYear\" placeholder=\"From year\" value={this.state.fromYear} onChange={this.handleChange}/>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.fromyearError}</div>}  \r\n                                                        </div> */}\r\n                                                        <Form ref={this.formRef}>\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" style={{fontSize:\"16px\"}}>From Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <Form.Item name=\"fromYear\"  \r\n                                                                    rules={[{ required: true, message: \"Please enter From Year\" },{pattern:/^[1-9]{4}$/, message:\"Numbers should not greater than 4\",maxlength:\"4\"}]}>\r\n                                                                    <Input type='text' style={{width:\"70%\"}}  class=\"form-control\" autocomplete=\"off\" placeholder=\"From year\" maxlength=\"4\" name=\"fromYear\" value={this.state.fromYear} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        {/* </Form>\r\n                                                        <Form ref={this.formRef}> */}\r\n                                                            <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                                <label class=\"control-label\" style={{fontSize:\"16px\"}}>To Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <Form.Item name=\"toYear\"  \r\n                                                                    rules={[{ required: true, message: \"Please enter To Year\" },{pattern:/^[1-9]{4}$/, message:\"Numbers should not greater than 4\"}]}>\r\n                                                                    <Input type='text' style={{width:\"70%\"}} class=\"form-control\" autocomplete=\"off\" maxlength=\"4\" name=\"toYear\" placeholder=\"To year\" value={this.state.toYear} onChange={this.handleChange} />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                        {/* <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label class=\"control-label\" for=\"tdate\" style={{fontSize:\"16px\"}}>To Year<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input type=\"number\" name=\"toYear\" placeholder=\"To year\" value={this.state.toYear}  onChange={this.handleChange}/>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.toyearError}</div>}\r\n                                                        </div> */}\r\n                                                        <div class=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button onClick= {()=>this.handleSubmit()}  class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\",marginTop:\"28px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>From Date</th>\r\n                                                    <th style={{textAlign:\"center\"}}>To Date</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            { this.state.year_data.map((data, index) =>\r\n                                                <tr>\r\n                                                    <td style={{textAlign:\"center\"}}>{index +1}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.fromYear}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>{data.toYear}</td>\r\n                                                    <td style={{textAlign:\"center\"}}>  \r\n                                                        <label className=\"switch\">\r\n                                                            <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                            <span className=\"slider round\"></span>    \r\n                                                        </label>\r\n                                                    </td>\r\n                                                    <td style={{textAlign:\"center\"}}>\r\n                                                        <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                            <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getyearbyslno(data.slno)} ></i>\r\n                                                        </button>\r\n                                                        <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                            <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Financialyear;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js",["135"],{"ruleId":"136","severity":1,"message":"137","line":25,"column":17,"nodeType":"138","endLine":25,"endColumn":169},{"ruleId":"136","severity":1,"message":"137","line":43,"column":17,"nodeType":"138","endLine":43,"endColumn":168},{"ruleId":"136","severity":1,"message":"137","line":59,"column":17,"nodeType":"138","endLine":59,"endColumn":168},{"ruleId":"136","severity":1,"message":"137","line":78,"column":17,"nodeType":"138","endLine":78,"endColumn":168},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":92,"column":23,"nodeType":"145","messageId":"146","endLine":92,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":277,"column":160,"nodeType":"149","endLine":277,"endColumn":173},{"ruleId":"147","severity":1,"message":"148","line":288,"column":160,"nodeType":"149","endLine":288,"endColumn":173},{"ruleId":"147","severity":1,"message":"148","line":305,"column":128,"nodeType":"149","endLine":305,"endColumn":147},{"ruleId":"150","severity":1,"message":"151","line":83,"column":47,"nodeType":"152","messageId":"153","endLine":83,"endColumn":48,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"155","line":83,"column":49,"nodeType":"152","messageId":"153","endLine":83,"endColumn":50,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":83,"column":51,"nodeType":"152","messageId":"153","endLine":83,"endColumn":52,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"151","line":83,"column":70,"nodeType":"152","messageId":"153","endLine":83,"endColumn":71,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"155","line":83,"column":72,"nodeType":"152","messageId":"153","endLine":83,"endColumn":73,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"157","line":83,"column":74,"nodeType":"152","messageId":"153","endLine":83,"endColumn":75,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"151","line":83,"column":93,"nodeType":"152","messageId":"153","endLine":83,"endColumn":94,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"155","line":83,"column":95,"nodeType":"152","messageId":"153","endLine":83,"endColumn":96,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"157","line":83,"column":97,"nodeType":"152","messageId":"153","endLine":83,"endColumn":98,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"151","line":83,"column":116,"nodeType":"152","messageId":"153","endLine":83,"endColumn":117,"suggestions":"165"},{"ruleId":"150","severity":1,"message":"155","line":83,"column":118,"nodeType":"152","messageId":"153","endLine":83,"endColumn":119,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"157","line":83,"column":120,"nodeType":"152","messageId":"153","endLine":83,"endColumn":121,"suggestions":"167"},{"ruleId":"147","severity":1,"message":"148","line":442,"column":125,"nodeType":"149","endLine":442,"endColumn":144},{"ruleId":"139","replacedBy":"168"},{"ruleId":"141","replacedBy":"169"},{"ruleId":"143","severity":1,"message":"170","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":35},{"ruleId":"143","severity":1,"message":"171","line":7,"column":9,"nodeType":"145","messageId":"146","endLine":7,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":174,"column":124,"nodeType":"149","endLine":174,"endColumn":143},{"ruleId":"139","replacedBy":"172"},{"ruleId":"141","replacedBy":"173"},{"ruleId":"143","severity":1,"message":"174","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":23},{"ruleId":"143","severity":1,"message":"175","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":263,"column":117,"nodeType":"149","endLine":263,"endColumn":136},{"ruleId":"147","severity":1,"message":"148","line":226,"column":124,"nodeType":"149","endLine":226,"endColumn":143},{"ruleId":"147","severity":1,"message":"148","line":182,"column":136,"nodeType":"149","endLine":182,"endColumn":155},{"ruleId":"147","severity":1,"message":"148","line":261,"column":125,"nodeType":"149","endLine":261,"endColumn":144},{"ruleId":"147","severity":1,"message":"148","line":195,"column":132,"nodeType":"149","endLine":195,"endColumn":151},{"ruleId":"143","severity":1,"message":"144","line":86,"column":19,"nodeType":"145","messageId":"146","endLine":86,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":30,"column":13,"nodeType":"178","messageId":"179","endLine":30,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":243,"column":179,"nodeType":"149","endLine":243,"endColumn":207},{"ruleId":"143","severity":1,"message":"144","line":58,"column":23,"nodeType":"145","messageId":"146","endLine":58,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":230,"column":137,"nodeType":"149","endLine":230,"endColumn":156},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["182","183"],"Unnecessary escape character: \\).",["184","185"],"Unnecessary escape character: \\..",["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],["180"],["181"],"'ExclamationCircleOutlined' is defined but never used.","'confirm' is assigned a value but never used.",["180"],["181"],"'CreateIPaddress' is defined but never used.","'CreateBranch' is defined but never used.","no-dupe-keys","Duplicate key 'stateError'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"206","fix":"207","desc":"208"},{"messageId":"209","fix":"210","desc":"211"},{"messageId":"206","fix":"212","desc":"208"},{"messageId":"209","fix":"213","desc":"211"},{"messageId":"206","fix":"214","desc":"208"},{"messageId":"209","fix":"215","desc":"211"},{"messageId":"206","fix":"216","desc":"208"},{"messageId":"209","fix":"217","desc":"211"},{"messageId":"206","fix":"218","desc":"208"},{"messageId":"209","fix":"219","desc":"211"},{"messageId":"206","fix":"220","desc":"208"},{"messageId":"209","fix":"221","desc":"211"},{"messageId":"206","fix":"222","desc":"208"},{"messageId":"209","fix":"223","desc":"211"},{"messageId":"206","fix":"224","desc":"208"},{"messageId":"209","fix":"225","desc":"211"},{"messageId":"206","fix":"226","desc":"208"},{"messageId":"209","fix":"227","desc":"211"},{"messageId":"206","fix":"228","desc":"208"},{"messageId":"209","fix":"229","desc":"211"},{"messageId":"206","fix":"230","desc":"208"},{"messageId":"209","fix":"231","desc":"211"},{"messageId":"206","fix":"232","desc":"208"},{"messageId":"209","fix":"233","desc":"211"},"removeEscape",{"range":"234","text":"235"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"236","text":"237"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"238","text":"235"},{"range":"239","text":"237"},{"range":"240","text":"235"},{"range":"241","text":"237"},{"range":"242","text":"235"},{"range":"243","text":"237"},{"range":"244","text":"235"},{"range":"245","text":"237"},{"range":"246","text":"235"},{"range":"247","text":"237"},{"range":"248","text":"235"},{"range":"249","text":"237"},{"range":"250","text":"235"},{"range":"251","text":"237"},{"range":"252","text":"235"},{"range":"253","text":"237"},{"range":"254","text":"235"},{"range":"255","text":"237"},{"range":"256","text":"235"},{"range":"257","text":"237"},{"range":"258","text":"235"},{"range":"259","text":"237"},[2729,2730],"",[2729,2729],"\\",[2731,2732],[2731,2731],[2733,2734],[2733,2733],[2752,2753],[2752,2752],[2754,2755],[2754,2754],[2756,2757],[2756,2756],[2775,2776],[2775,2775],[2777,2778],[2777,2777],[2779,2780],[2779,2779],[2798,2799],[2798,2798],[2800,2801],[2800,2800],[2802,2803],[2802,2802]]