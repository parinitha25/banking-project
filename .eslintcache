[{"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js":"1","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js":"2","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js":"3","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js":"4","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js":"5","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js":"6","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js":"7","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\SBaccount.js":"8","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js":"9","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js":"10","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js":"11","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js":"12","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js":"13","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js":"14","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js":"15","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js":"16","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js":"17","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js":"18","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js":"19","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Bod.js":"20","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LoanonDeposit.js":"21","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Feeparameter.js":"22","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\UserLogin.js":"23","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPEnable.js":"24","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createIPaddress.js":"25","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Loanondeposit.js":"26","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\taluk.js":"27","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createBranch.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":8992,"mtime":1610343399467,"results":"31","hashOfConfig":"30"},{"size":12784,"mtime":1610357107206,"results":"32","hashOfConfig":"30"},{"size":15480,"mtime":1610356906476,"results":"33","hashOfConfig":"30"},{"size":21972,"mtime":1610448249375,"results":"34","hashOfConfig":"30"},{"size":28492,"mtime":1610369698357,"results":"35","hashOfConfig":"30"},{"size":13213,"mtime":1610350833598,"results":"36","hashOfConfig":"30"},{"size":25514,"mtime":1610357017336,"results":"37","hashOfConfig":"30"},{"size":3365,"mtime":1610344657403,"results":"38","hashOfConfig":"30"},{"size":152,"mtime":1610347559035,"results":"39","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"30"},{"size":13256,"mtime":1610366787381,"results":"41","hashOfConfig":"30"},{"size":11268,"mtime":1610356906476,"results":"42","hashOfConfig":"30"},{"size":15674,"mtime":1610356906476,"results":"43","hashOfConfig":"30"},{"size":11460,"mtime":1610425233381,"results":"44","hashOfConfig":"30"},{"size":18656,"mtime":1610356906476,"results":"45","hashOfConfig":"30"},{"size":15608,"mtime":1610363740127,"results":"46","hashOfConfig":"30"},{"size":15036,"mtime":1610365472334,"results":"47","hashOfConfig":"30"},{"size":13904,"mtime":1610365585855,"results":"48","hashOfConfig":"30"},{"size":13018,"mtime":1610445404655,"results":"49","hashOfConfig":"30"},{"size":15643,"mtime":1610192941299,"results":"50","hashOfConfig":"30"},{"size":17950,"mtime":1610363408231,"results":"51","hashOfConfig":"30"},{"size":12976,"mtime":1610195550631,"results":"52","hashOfConfig":"30"},{"size":9403,"mtime":1610361009632,"results":"53","hashOfConfig":"30"},{"size":11020,"mtime":1608530798866,"results":"54","hashOfConfig":"30"},{"size":20922,"mtime":1610365390997,"results":"55","hashOfConfig":"30"},{"size":15497,"mtime":1610356906476,"results":"56","hashOfConfig":"30"},{"size":20135,"mtime":1610350833598,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7qkwa2",{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\index.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Navbar.js",["118","119","120","121"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Relationship.js",[],["122","123"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\News.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\share.js",["124","125","126","127"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Branch.js",["128"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPaddress.js",["129"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\SBaccount.js",["130"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\App.js",["131","132"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\api\\index.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\reportWebVitals.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\state.js",["133"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Country.js",["134"],"import React, { Component } from 'react';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Country extends Component{\r\n    state = {\r\n        country: \"\",\r\n        country_data:[],\r\n        countryError:'',\r\n        button:\"ADD\",\r\n        errors:{},\r\n        id:'',\r\n        editing:false,\r\n        isediting:true,\r\n        isActive:''\r\n    };\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    //validation purpose\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.country.trim() === ''){\r\n            errors.countryError='country name is required.';\r\n        }\r\n        else if(!this.state.country.match(/^[a-zA-Z ]+$/)){\r\n            errors.countryError = \"The country name is not correct\";\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //create the data\r\n    handleSubmit=()=>{\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                country:this.state.country\r\n            }   \r\n            api.post(`master/country/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n        const params = {\r\n            slno:this.state.id,\r\n            country:this.state.country,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/country/update`, params)\r\n            .then(res => {      \r\n                 message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload(); }, 1000);\r\n                this.getCountryList();\t\t\r\n            })\r\n            .catch(err=>{\r\n                 message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCountryList();\r\n    }\r\n    \r\n    //get country data\r\n    getCountryList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({country_data:res.data.data})\r\n            console.log(this.state.country_data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //edit data\r\n    getcountrybyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/country/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({country:res.data.data.country,id:res.data.data.slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n           console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/country/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                     message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                     message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 res\">\r\n                            <h4>Country</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Country</p>\r\n                            <div className=\"btnblue heading\">\r\n                                <label className=\"l1\">Country</label>\r\n                            </div>\r\n                            <div class=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div class=\"panel-body\">\r\n                                    <div class=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 col-sm-12\">\r\n                                                <div class=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div class=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div class=\"form-group col-md-5 col-sm-12\">\r\n                                                            <label class=\"control-label\" for=\"city\">Country</label>\r\n                                                            <div class=\"input-group\">\r\n                                                                <input class=\"form-control\"  placeholder=\"Enter Country\" type=\"text\" name=\"country\" value={this.state.country} onChange={this.handleChange}/> \r\n                                                                    {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.countryError}</div>}  \r\n                                                                <span class=\"input-group-btn\">\r\n                                                                    <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\"}}>{this.state.button}</button>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Country</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.country_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.country}</td>  \r\n                                                        <td style={{textAlign:\"center\"}}>\r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label></td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getcountrybyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Country;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Village.js",["135"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Eod.js",["136"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\HolidayList.js",["137"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LateFeeparameter.js",["138"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Financialyear.js",["139"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\District.js",["140"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Bod.js",["141"],"import React, { Component } from 'react';\r\nimport '../../css/Master/Bod.css';\r\nimport 'antd/dist/antd.css';\r\n// import DatePicker from \"react-datepicker\";\r\nimport { DatePicker,Form } from 'antd';\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\nimport api from '../../api/index';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass BOD extends Component{\r\n    formRef = React.createRef();\r\n    state={\r\n        date:'',\r\n        bod_data:[],\r\n        id:'',\r\n        isediting:true,\r\n        editing:false,\r\n        bodError:'',\r\n        button:'ADD'\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    //validation purpose\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.date === ''){\r\n            errors.bodError='BOD is required.';\r\n        }\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    //create the data\r\n    handleSubmit=()=>{\r\n         debugger\r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                bod:this.state.date, \r\n            }   \r\n            api.post(`master/bod/create`, params)      \r\n            .then(res =>{     \r\n                this.setState({editing:false})\r\n                message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                setTimeout(function(){window.location.reload();}, 1000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n         \r\n        const params = {\r\n            slno:this.state.id,\r\n            bod:this.state.date,\r\n            isActive:this.state.isediting\r\n        }    \r\n        api.post(`master/bod/update`, params)\r\n            .then(res => {      \r\n                 message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\r\n            })\r\n            .catch(err=>{\r\n                 message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n                 setTimeout(function(){window.location.reload(); }, 1000);     \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getbodlist();\r\n    }\r\n\r\n    //get bod list\r\n    getbodlist = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/bod/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n          this.setState({bod_data:res.data.data})\r\n            console.log(this.state.bod_data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n      //edit data\r\n      getbodbyslno= (slno) => {\r\n          debugger \r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/bod/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n                \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{     \r\n            this.setState({date: res.data.data[0].bod,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n            // var temp= (res.data.data[0].bod)\r\n            // console.log(temp)\r\n            // debugger\r\n            // var temp1=moment((temp))  \r\n        \r\n            var temp= (res.data.data[0].bod)\r\n            console.log(temp)\r\n            console.log(typeof(temp))\r\n            console.log(temp)\r\n            debugger\r\n            var temp1=moment((temp.substr(0, 31)+''))  \r\n            console.log(temp1)\r\n            console.log(typeof(temp1))\r\n            // var temp2=moment((temp1).format(\"DD/MM/YYYY\"));\r\n            var temp2=toString(temp1);\r\n            this.formRef.current.setFieldsValue({ date: temp2});  \r\n            console.log(typeof(date))\r\n            console.log(typeof(temp2))\r\n            console.log(this.state.date)     \r\n        })\r\n        .catch(err => {\r\n           console.log(err)\r\n        })\r\n    }\r\n\r\n    //delete row\r\n    deletedata=(slno)=> {\r\n         \r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/bod/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                     message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                     message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    dateChange=(date,dateString)=>{\r\n        debugger\r\n        this.setState({ date: moment(date).format(\"DD/MM/YYYY\")});\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee;\"}} >\r\n                <div className=\"container-fluid\" style={{marginTop:\"55px\"}} >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10 \">\r\n                        <h4>BOD</h4>\r\n                        <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>BOD</p>\r\n                        <div className=\"btnblue heading\"><label className=\"l1\">BOD</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div className=\"form-group col-md-4 col-sm-12\">\r\n                                                            <label className=\"control-label\" for=\"bod\">BOD<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <div className=\"input-group\">\r\n                                                                 <Form ref={this.formRef} name=\"date\">\r\n                                                                    <Form.Item name=\"date\">\r\n                                                                        <DatePicker \r\n                                                                            // value={moment(this.state.date)}\r\n                                                                            format=\"DD/MM/YYYY\"\r\n                                                                            onChange={this.dateChange}\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                                </Form>\r\n                                                                {/* <input type='date' value={this.state.date} onChange={(date) => this.setState({ date:date })}/> */}\r\n                                                                {/* // onChange={(date)=>date:date}/> */}\r\n                                                                 {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.bodError}</div>}\r\n                                                                <span className=\"input-group-btn\">\r\n                                                                <button  class=\"btn btn-primary\" onClick={()=>this.handleSubmit()} class=\"btn btnblue\" style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginLeft:\"20px\"}}>{this.state.button}</button>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-group table-responsive\" style={{marginBottom:\" 8px\",backgroundColor:\"#fff\"}}>\r\n                                        <table className=\"table table-bordered table-hover table-striped\" id=\"tabel1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center;\"}}>Sl<span style={{visibility:\"hidden\"}}>_</span>No.</th>\r\n                                                    <th style={{textAlign:\"Center\"}}>BOD</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.bod_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.bod}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>\r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label></td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.getbodbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BOD;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\LoanonDeposit.js",["142"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Feeparameter.js",["143","144"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\UserLogin.js",["145","146"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\IPEnable.js",["147","148"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createIPaddress.js",[],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\Loanondeposit.js",["149","150","151","152"],"C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\taluk.js",["153"],"import React, { Component } from 'react';\r\nimport '../../css/Master/taluk.css';\r\nimport api from '../../api/index';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal,message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nconst { confirm } = Modal;\r\n\r\nclass Taluk extends Component{\r\n    state={\r\n        taluk:'',\r\n        state_data:[],\r\n        district_data:[],\r\n        delete_posts:[],\r\n        taluk_data:[],\r\n        state:'',\r\n        district:'',\r\n        button:\"ADD\",\r\n        id:'',\r\n        editing:false,\r\n        isediting:true,\r\n        talukError:'',\r\n        stateError:'',\r\n        districtError:''\r\n    }\r\n\r\n    validate=()=>{\r\n        const errors={};\r\n        if(this.state.taluk.trim() === ''){\r\n            errors.talukError='Taluk name is required.';\r\n        }\r\n        else if(!this.state.taluk.match(/^[a-zA-Z ]+$/)){\r\n            errors.talukError = \"Taluk name is not correct\";\r\n        }\r\n        if(this.state.state=== '')\r\n            errors.stateError='State is required.';\r\n        if(this.state.district=== '')\r\n            errors.districtError='District is required.';\r\n        return Object.keys(errors).length=== 0 ? null : errors;\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    // change the country value\r\n    handleChangestate=(e)=>{\r\n        this.setState({state:e.target.value})\r\n    }\r\n    // change the district value\r\n    handleChangedistrict=(e)=>{\r\n        this.setState({district:e.target.value})\r\n    }\r\n\r\n    //handle change for enable button\r\n    handleEnableChange=(e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        });\r\n    }\r\n\r\n    // create data\r\n    handleSubmit=()=>{ \r\n        const errors=this.validate();\r\n        this.setState({errors})\r\n        if(errors) return;\r\n        if(this.state.editing===false){  \r\n            const params = {\r\n                taluk:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n            }   \r\n            api.post(`master/taluk/create`, params)       \r\n            .then(res => {\r\n                console.log(res);\r\n                 message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload();}, 1000);         \r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                 message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload();}, 1000);   \r\n            })\r\n        }\r\n        else{\r\n            const params = { \r\n                slno:this.state.id,\r\n                taluk:this.state.taluk,\r\n                stateSlno:this.state.state,\r\n                districtSlno:this.state.district,\r\n                isActive:this.state.isediting\r\n            }    \r\n            api.post(`master/taluk/update`, params)\r\n            .then(res => {      \r\n                console.log(res)\r\n                 message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload(); }, 1000);\t\t\t\t\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n                 message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                setTimeout(function(){window.location.reload(); }, 1000);   \r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getstateList();\r\n        this.getdistrictList();\r\n        this.gettalukList();\r\n    }\r\n\r\n    //get taluk data\r\n    gettalukList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({taluk_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get state list\r\n    getstateList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/state/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({state_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n\r\n    //get district list\r\n    getdistrictList = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/district/get',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{}\r\n        }; \r\n        api(config).then(res=>{\r\n            this.setState({district_data:res.data.data})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    } \r\n     \r\n    //delete row\r\n    deletedata=(slno)=> {\r\n        confirm({\r\n            title: 'Are you sure delete this list?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk(){\r\n                var config = {\r\n                    method: 'post',\r\n                    url: 'master/taluk/delete',\r\n                    headers: {\"content-type\": \"application/json\"},\r\n                    data :{ \r\n                    \"slno\":slno,\r\n                    }\r\n                };\r\n                api(config).then(res => {  \r\n                    console.log(res.data)\r\n                     message.success({content: (res.data.data),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);     \r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                     message.error({content: (err.response.data.message),style: { textAlign: \"center\" ,marginTop:\"100px\"},});\r\n\r\n                    setTimeout(function(){window.location.reload(); }, 1000);   \r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log(\"Cancel\");\r\n            }    \r\n        });\r\n    }\r\n\r\n    // edit data\r\n     gettalukbyslno= (slno) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'master/taluk/getBySlno',\r\n            headers: {\"content-type\": \"application/json\"},\r\n            data :{ \r\n              \"slno\":slno,\r\n            }                 \r\n        };\r\n        api(config).then(res=>{\r\n            this.setState({state:res.data.data[0].stateSlno,district:res.data.data[0].districtSlno,taluk:res.data.data[0].taluk,id:res.data.data[0].slno,editing:true,button:\"Update\"})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor:\"#eeeeee\"}}>\r\n                <div  className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1 col-sm-1\"></div>\r\n                        <div className=\"col-md-10 col-sm-10\">\r\n                            <h4>Taluk</h4>\r\n                            <p style={{backgroundColor:\"#d3d3d3\",paddingLeft:\"10px\"}}>Taluk</p>\r\n                            <div className=\"btnblue heading\"><label className=\"l1\">Taluk</label></div>\r\n                            <div className=\"panel panel-default\" style={{borderTop:\"3px solid #3869ae\"}}>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"panel-group\" style={{backgroundColor:\"#fff\"}}>\r\n                                        <div className=\"row\">\t\t\t\t\t\t\t\t\t\r\n                                            <div className=\"form-group col-md-12 col-sm-12\">\r\n                                                <div className=\"panel-group\" style={{marginBottom: \"8px\"}}>\r\n                                                    <div className=\"row\" style={{padding:\"10px\"}}>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">State<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <select value={this.state.state} onChange={this.handleChangestate} className=\"form-control\">\r\n                                                                    <option>--Select State--</option>\r\n                                                                    {this.state.state_data.map((data) => \r\n                                                                        <option value={data.slno}>{data.state}</option>\r\n                                                                    )}\r\n                                                                </select>\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.stateError}</div>}\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">District<span style={{color:\"red\"}}>*</span></label>\r\n                                                                <select value={this.state.district} onChange={this.handleChangedistrict} className=\"form-control\">\r\n                                                                    <option>--Select District--</option>\r\n                                                                    {this.state.district_data.map((data) => \r\n                                                                    <option value={data.slno}>{data.district}</option>\r\n                                                                    )}\r\n                                                                </select>\t\r\n                                                                {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.districtError}</div>}\t\t\t\t\t\t\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <label className=\"control-label\" for=\"city\">Taluk<span style={{color:\"red\"}}>*</span></label>\r\n                                                            <input   class=\"form-control\"   placeholder=\"Enter State\" type=\"text\" name=\"taluk\" value={this.state.taluk} onChange={this.handleChange}/> \r\n                                                            {this.state.errors && <div style={{color:\"red\"}}>{this.state.errors.talukError}</div>}\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3 col-sm-3\">\r\n                                                            <button  class=\"btn btn-primary\" onClick= {()=>this.handleSubmit()} class=\"btn btnblue\"  style={{width:\"100px\",borderRadius:\"3px\",marginRight:\"20px\",marginTop:\"25px\"}}>{this.state.button}</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>       \r\n                                    <div class=\"panel-group table-responsive\" style={{marginBottom:\" 8px\"}}>\r\n                                        <table class=\"table table-bordered table-hover table-striped\" id=\"example1\">\r\n                                            <thead>\r\n                                                <tr style={{color:\"#3869ae\"}}>\r\n                                                    <th style={{textAlign:\"center\"}}>Sl No.</th>\r\n                                                    <th style={{textAlign:\"center\"}}>State</th>\r\n                                                    <th style={{textAlign:\"center\"}}>District</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Taluk</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Enable / Disable</th>\r\n                                                    <th style={{textAlign:\"center\"}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { this.state.taluk_data.map((data, index) => \r\n                                                    <tr role=\"row\" className=\"odd\">\r\n                                                        <td style={{textAlign:\"center\"}}>{index +1}</td>  \r\n                                                        <td style={{textAlign:\"left\"}}>{data.state}</td> \r\n                                                        <td style={{textAlign:\"left\"}}>{data.district}</td>\r\n                                                        <td style={{textAlign:\"left\"}}>{data.taluk}</td> \r\n                                                        <td style={{textAlign:\"center\"}}>  \r\n                                                            <label className=\"switch\">\r\n                                                                <input type=\"checkbox\" name=\"isediting\"  defaultChecked={data.isActive}  onChange={this.handleEnableChange}/>\r\n                                                                <span className=\"slider round\"></span>    \r\n                                                            </label>\r\n                                                        </td>\r\n                                                        <td  style={{textAlign:\"center\"}}>\r\n                                                            <button class=\"btn w3-white edit-data\" id=\"1\">\r\n                                                                <i class=\"fa fa-pencil text-primary\" style={{color:\"blue\",fontSize:\"20px\"}} onClick={(e) => this.gettalukbyslno(data.slno)} ></i>\r\n                                                            </button>\r\n                                                            <button class=\"btn w3-white delete-data\" id=\"1\">\r\n                                                                <i  class=\"fa fa-trash text-primary\" style={{color:\"red\",fontSize:\"20px\"}} onClick={() => this.deletedata(data.slno)}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )} \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Taluk;","C:\\Users\\Digital Marketing\\Documents\\banking-process\\banking-process\\src\\Components\\Master\\createBranch.js",[],{"ruleId":"154","severity":1,"message":"155","line":25,"column":17,"nodeType":"156","endLine":25,"endColumn":169},{"ruleId":"154","severity":1,"message":"155","line":44,"column":17,"nodeType":"156","endLine":44,"endColumn":168},{"ruleId":"154","severity":1,"message":"155","line":60,"column":17,"nodeType":"156","endLine":60,"endColumn":168},{"ruleId":"154","severity":1,"message":"155","line":79,"column":17,"nodeType":"156","endLine":79,"endColumn":168},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":92,"column":23,"nodeType":"163","messageId":"164","endLine":92,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":289,"column":160,"nodeType":"167","endLine":289,"endColumn":171},{"ruleId":"165","severity":1,"message":"166","line":300,"column":160,"nodeType":"167","endLine":300,"endColumn":171},{"ruleId":"165","severity":1,"message":"166","line":317,"column":128,"nodeType":"167","endLine":317,"endColumn":147},{"ruleId":"165","severity":1,"message":"166","line":445,"column":125,"nodeType":"167","endLine":445,"endColumn":144},{"ruleId":"165","severity":1,"message":"166","line":229,"column":124,"nodeType":"167","endLine":229,"endColumn":143},{"ruleId":"165","severity":1,"message":"166","line":315,"column":132,"nodeType":"167","endLine":315,"endColumn":151},{"ruleId":"161","severity":1,"message":"168","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"169","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":225,"column":124,"nodeType":"167","endLine":225,"endColumn":143},{"ruleId":"165","severity":1,"message":"166","line":185,"column":136,"nodeType":"167","endLine":185,"endColumn":155},{"ruleId":"165","severity":1,"message":"166","line":267,"column":125,"nodeType":"167","endLine":267,"endColumn":144},{"ruleId":"165","severity":1,"message":"166","line":193,"column":136,"nodeType":"167","endLine":193,"endColumn":155},{"ruleId":"161","severity":1,"message":"162","line":86,"column":19,"nodeType":"163","messageId":"164","endLine":86,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":91,"column":23,"nodeType":"163","messageId":"164","endLine":91,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":58,"column":23,"nodeType":"163","messageId":"164","endLine":58,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":230,"column":137,"nodeType":"167","endLine":230,"endColumn":156},{"ruleId":"165","severity":1,"message":"166","line":219,"column":132,"nodeType":"167","endLine":219,"endColumn":151},{"ruleId":"165","severity":1,"message":"166","line":261,"column":117,"nodeType":"167","endLine":261,"endColumn":136},{"ruleId":"170","severity":1,"message":"171","line":83,"column":11,"nodeType":"172","messageId":"173","endLine":83,"endColumn":12,"fix":"174"},{"ruleId":"170","severity":1,"message":"171","line":99,"column":11,"nodeType":"172","messageId":"173","endLine":99,"endColumn":12,"fix":"175"},{"ruleId":"161","severity":1,"message":"176","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":35},{"ruleId":"161","severity":1,"message":"177","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"176","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":35},{"ruleId":"161","severity":1,"message":"177","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":115,"column":23,"nodeType":"163","messageId":"164","endLine":115,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":282,"column":300,"nodeType":"167","endLine":282,"endColumn":311},{"ruleId":"165","severity":1,"message":"166","line":297,"column":257,"nodeType":"167","endLine":297,"endColumn":268},{"ruleId":"165","severity":1,"message":"166","line":302,"column":121,"nodeType":"167","endLine":302,"endColumn":140},{"ruleId":"165","severity":1,"message":"166","line":261,"column":129,"nodeType":"167","endLine":261,"endColumn":148},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CreateIPaddress' is defined but never used.","'CreateBranch' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"180","text":"181"},{"range":"182","text":"181"},"'ExclamationCircleOutlined' is defined but never used.","'confirm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2427,2438],"\r\n        .",[2865,2876]]